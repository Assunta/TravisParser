travis_fold:start:worker_infoWorker information
hostname: i-02d8253-production-2-worker-org-ec2.travisci.net:abc1d809-b2d3-42e8-9488-cec299e488ca
version: v2.8.2 https://github.com/travis-ci/worker/tree/8af6d454c3a7790f73c7af98ed33b0b33292478f
instance: b474350:travis:ruby
startup: 817.001461ms
travis_fold:end:worker_infotravis_fold:start:system_infoBuild system information
Build language: ruby
Build group: stable
Build dist: trusty
Build id: 240236043
Job id: 240236052
travis-build version: 4183c5148
Build image provisioning date and time
Thu Nov 10 03:26:46 UTC 2016
Operating System Details
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
Linux Version
4.4.0-45-generic
Cookbooks Version
58fad1f https://github.com/travis-ci/travis-cookbooks/tree/58fad1f
git version
git version 1.9.1
bash version
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
gcc version
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

docker version
Client:
 Version:      1.12.3
 API version:  1.24
 Go version:   go1.6.3
 Git commit:   6b644ec
 Built:        Wed Oct 26 23:26:11 2016
 OS/Arch:      linux/amd64
clang version
clang version 3.5.0 (tags/RELEASE_350/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
jq version
jq-1.5
bats version
Bats 0.4.0
gimme version
v1.0.0
nvm version
0.32.0
perlbrew version
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.76
postgresql client version
psql (PostgreSQL) 9.6.1
phpenv version
rbenv 1.0.0-33-gc7dcaf1
rvm version
rvm 1.27.0 (latest) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]
default ruby version
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-linux]
Pre-installed Ruby versions
ruby-2.2.5
ruby-2.3.1
travis_fold:end:system_info
Removing symlink /usr/lib/jvm/java-8-oracle-amd64
$ sudo rm -f /usr/lib/jvm/java-8-oracle-amd64
Reload jdk_switcher
$ source $HOME/.jdk_switcher_rc
travis_fold:start:git.checkouttravis_time:start:147e2f89$ git clone --depth=50 https://github.com/chef/chef.git chef/chef
Cloning into 'chef/chef'...
remote: Counting objects: 12193, done.[K
remote: Compressing objects:   0% (1/6956)   [Kremote: Compressing objects:   1% (70/6956)   [Kremote: Compressing objects:   2% (140/6956)   [Kremote: Compressing objects:   3% (209/6956)   [Kremote: Compressing objects:   4% (279/6956)   [Kremote: Compressing objects:   5% (348/6956)   [Kremote: Compressing objects:   6% (418/6956)   [Kremote: Compressing objects:   7% (487/6956)   [Kremote: Compressing objects:   8% (557/6956)   [Kremote: Compressing objects:   9% (627/6956)   [Kremote: Compressing objects:  10% (696/6956)   [Kremote: Compressing objects:  11% (766/6956)   [Kremote: Compressing objects:  12% (835/6956)   [Kremote: Compressing objects:  13% (905/6956)   [Kremote: Compressing objects:  14% (974/6956)   [Kremote: Compressing objects:  15% (1044/6956)   [Kremote: Compressing objects:  16% (1113/6956)   [Kremote: Compressing objects:  17% (1183/6956)   [Kremote: Compressing objects:  18% (1253/6956)   [Kremote: Compressing objects:  19% (1322/6956)   [Kremote: Compressing objects:  20% (1392/6956)   [Kremote: Compressing objects:  21% (1461/6956)   [Kremote: Compressing objects:  22% (1531/6956)   [Kremote: Compressing objects:  23% (1600/6956)   [Kremote: Compressing objects:  24% (1670/6956)   [Kremote: Compressing objects:  25% (1739/6956)   [Kremote: Compressing objects:  26% (1809/6956)   [Kremote: Compressing objects:  27% (1879/6956)   [Kremote: Compressing objects:  28% (1948/6956)   [Kremote: Compressing objects:  29% (2018/6956)   [Kremote: Compressing objects:  30% (2087/6956)   [Kremote: Compressing objects:  31% (2157/6956)   [Kremote: Compressing objects:  32% (2226/6956)   [Kremote: Compressing objects:  33% (2296/6956)   [Kremote: Compressing objects:  34% (2366/6956)   [Kremote: Compressing objects:  35% (2435/6956)   [Kremote: Compressing objects:  36% (2505/6956)   [Kremote: Compressing objects:  37% (2574/6956)   [Kremote: Compressing objects:  38% (2644/6956)   [Kremote: Compressing objects:  39% (2713/6956)   [Kremote: Compressing objects:  40% (2783/6956)   [Kremote: Compressing objects:  41% (2852/6956)   [Kremote: Compressing objects:  42% (2922/6956)   [Kremote: Compressing objects:  43% (2992/6956)   [Kremote: Compressing objects:  44% (3061/6956)   [Kremote: Compressing objects:  45% (3131/6956)   [Kremote: Compressing objects:  46% (3200/6956)   [Kremote: Compressing objects:  47% (3270/6956)   [Kremote: Compressing objects:  48% (3339/6956)   [Kremote: Compressing objects:  49% (3409/6956)   [Kremote: Compressing objects:  50% (3478/6956)   [Kremote: Compressing objects:  51% (3548/6956)   [Kremote: Compressing objects:  52% (3618/6956)   [Kremote: Compressing objects:  53% (3687/6956)   [Kremote: Compressing objects:  54% (3757/6956)   [Kremote: Compressing objects:  55% (3826/6956)   [Kremote: Compressing objects:  56% (3896/6956)   [Kremote: Compressing objects:  57% (3965/6956)   [Kremote: Compressing objects:  58% (4035/6956)   [Kremote: Compressing objects:  59% (4105/6956)   [Kremote: Compressing objects:  60% (4174/6956)   [Kremote: Compressing objects:  61% (4244/6956)   [Kremote: Compressing objects:  62% (4313/6956)   [Kremote: Compressing objects:  63% (4383/6956)   [Kremote: Compressing objects:  64% (4452/6956)   [Kremote: Compressing objects:  65% (4522/6956)   [Kremote: Compressing objects:  66% (4591/6956)   [Kremote: Compressing objects:  67% (4661/6956)   [Kremote: Compressing objects:  68% (4731/6956)   [Kremote: Compressing objects:  69% (4800/6956)   [Kremote: Compressing objects:  70% (4870/6956)   [Kremote: Compressing objects:  71% (4939/6956)   [Kremote: Compressing objects:  72% (5009/6956)   [Kremote: Compressing objects:  73% (5078/6956)   [Kremote: Compressing objects:  74% (5148/6956)   [Kremote: Compressing objects:  75% (5217/6956)   [Kremote: Compressing objects:  76% (5287/6956)   [Kremote: Compressing objects:  77% (5357/6956)   [Kremote: Compressing objects:  78% (5426/6956)   [Kremote: Compressing objects:  79% (5496/6956)   [Kremote: Compressing objects:  80% (5565/6956)   [Kremote: Compressing objects:  81% (5635/6956)   [Kremote: Compressing objects:  82% (5704/6956)   [Kremote: Compressing objects:  83% (5774/6956)   [Kremote: Compressing objects:  84% (5844/6956)   [Kremote: Compressing objects:  85% (5913/6956)   [Kremote: Compressing objects:  86% (5983/6956)   [Kremote: Compressing objects:  87% (6052/6956)   [Kremote: Compressing objects:  88% (6122/6956)   [Kremote: Compressing objects:  89% (6191/6956)   [Kremote: Compressing objects:  90% (6261/6956)   [Kremote: Compressing objects:  91% (6330/6956)   [Kremote: Compressing objects:  92% (6400/6956)   [Kremote: Compressing objects:  93% (6470/6956)   [Kremote: Compressing objects:  94% (6539/6956)   [Kremote: Compressing objects:  95% (6609/6956)   [Kremote: Compressing objects:  96% (6678/6956)   [Kremote: Compressing objects:  97% (6748/6956)   [Kremote: Compressing objects:  98% (6817/6956)   [Kremote: Compressing objects:  99% (6887/6956)   [Kremote: Compressing objects: 100% (6956/6956)   [Kremote: Compressing objects: 100% (6956/6956), done.[K
Receiving objects:   0% (1/12193)   Receiving objects:   1% (122/12193)   Receiving objects:   2% (244/12193)   Receiving objects:   3% (366/12193)   Receiving objects:   4% (488/12193)   Receiving objects:   5% (610/12193)   Receiving objects:   6% (732/12193)   Receiving objects:   7% (854/12193)   Receiving objects:   8% (976/12193)   Receiving objects:   9% (1098/12193)   Receiving objects:  10% (1220/12193)   Receiving objects:  11% (1342/12193)   Receiving objects:  12% (1464/12193)   Receiving objects:  13% (1586/12193)   Receiving objects:  14% (1708/12193)   Receiving objects:  15% (1829/12193)   Receiving objects:  16% (1951/12193)   Receiving objects:  17% (2073/12193)   Receiving objects:  18% (2195/12193)   Receiving objects:  19% (2317/12193)   Receiving objects:  20% (2439/12193)   Receiving objects:  21% (2561/12193)   Receiving objects:  22% (2683/12193)   Receiving objects:  23% (2805/12193)   Receiving objects:  24% (2927/12193)   Receiving objects:  25% (3049/12193)   Receiving objects:  26% (3171/12193)   Receiving objects:  27% (3293/12193)   Receiving objects:  28% (3415/12193)   Receiving objects:  29% (3536/12193)   Receiving objects:  30% (3658/12193)   Receiving objects:  31% (3780/12193)   Receiving objects:  32% (3902/12193)   Receiving objects:  33% (4024/12193)   Receiving objects:  34% (4146/12193)   Receiving objects:  35% (4268/12193)   Receiving objects:  36% (4390/12193)   Receiving objects:  37% (4512/12193)   Receiving objects:  38% (4634/12193)   Receiving objects:  39% (4756/12193)   Receiving objects:  40% (4878/12193)   Receiving objects:  41% (5000/12193)   Receiving objects:  42% (5122/12193)   Receiving objects:  43% (5243/12193)   Receiving objects:  44% (5365/12193)   Receiving objects:  45% (5487/12193)   Receiving objects:  46% (5609/12193)   Receiving objects:  47% (5731/12193)   Receiving objects:  48% (5853/12193)   Receiving objects:  49% (5975/12193)   Receiving objects:  50% (6097/12193)   Receiving objects:  51% (6219/12193)   Receiving objects:  52% (6341/12193)   Receiving objects:  53% (6463/12193)   Receiving objects:  54% (6585/12193)   Receiving objects:  55% (6707/12193)   Receiving objects:  56% (6829/12193)   Receiving objects:  57% (6951/12193)   Receiving objects:  58% (7072/12193)   Receiving objects:  59% (7194/12193)   Receiving objects:  60% (7316/12193)   Receiving objects:  61% (7438/12193)   Receiving objects:  62% (7560/12193)   Receiving objects:  63% (7682/12193)   Receiving objects:  64% (7804/12193)   Receiving objects:  65% (7926/12193)   Receiving objects:  66% (8048/12193)   Receiving objects:  67% (8170/12193)   Receiving objects:  68% (8292/12193)   Receiving objects:  69% (8414/12193)   Receiving objects:  70% (8536/12193)   Receiving objects:  71% (8658/12193)   Receiving objects:  72% (8779/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  73% (8901/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  74% (9023/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  75% (9145/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  76% (9267/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  77% (9389/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  78% (9511/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  79% (9633/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  80% (9755/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  81% (9877/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  82% (9999/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  83% (10121/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  84% (10243/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  85% (10365/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  86% (10486/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  87% (10608/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  88% (10730/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  89% (10852/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  90% (10974/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  91% (11096/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  92% (11218/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  93% (11340/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  94% (11462/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  95% (11584/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  96% (11706/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  97% (11828/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  98% (11950/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects:  99% (12072/12193), 3.43 MiB | 6.84 MiB/s   remote: Total 12193 (delta 7339), reused 8068 (delta 4598), pack-reused 0[K
Receiving objects: 100% (12193/12193), 3.43 MiB | 6.84 MiB/s   Receiving objects: 100% (12193/12193), 5.43 MiB | 6.84 MiB/s, done.
Resolving deltas:   0% (0/7339)   Resolving deltas:   1% (77/7339)   Resolving deltas:   2% (158/7339)   Resolving deltas:   3% (261/7339)   Resolving deltas:   4% (349/7339)   Resolving deltas:   5% (391/7339)   Resolving deltas:   6% (510/7339)   Resolving deltas:  11% (811/7339)   Resolving deltas:  13% (987/7339)   Resolving deltas:  14% (1029/7339)   Resolving deltas:  15% (1101/7339)   Resolving deltas:  16% (1185/7339)   Resolving deltas:  18% (1325/7339)   Resolving deltas:  19% (1408/7339)   Resolving deltas:  21% (1574/7339)   Resolving deltas:  22% (1618/7339)   Resolving deltas:  23% (1706/7339)   Resolving deltas:  24% (1787/7339)   Resolving deltas:  25% (1881/7339)   Resolving deltas:  26% (1956/7339)   Resolving deltas:  27% (1984/7339)   Resolving deltas:  28% (2109/7339)   Resolving deltas:  29% (2130/7339)   Resolving deltas:  30% (2202/7339)   Resolving deltas:  31% (2278/7339)   Resolving deltas:  32% (2353/7339)   Resolving deltas:  33% (2434/7339)   Resolving deltas:  34% (2496/7339)   Resolving deltas:  35% (2634/7339)   Resolving deltas:  36% (2689/7339)   Resolving deltas:  37% (2717/7339)   Resolving deltas:  38% (2794/7339)   Resolving deltas:  39% (2869/7339)   Resolving deltas:  40% (2963/7339)   Resolving deltas:  41% (3014/7339)   Resolving deltas:  44% (3276/7339)   Resolving deltas:  45% (3316/7339)   Resolving deltas:  46% (3377/7339)   Resolving deltas:  47% (3451/7339)   Resolving deltas:  48% (3567/7339)   Resolving deltas:  50% (3732/7339)   Resolving deltas:  51% (3748/7339)   Resolving deltas:  52% (3866/7339)   Resolving deltas:  53% (3890/7339)   Resolving deltas:  54% (3966/7339)   Resolving deltas:  55% (4037/7339)   Resolving deltas:  56% (4114/7339)   Resolving deltas:  57% (4205/7339)   Resolving deltas:  58% (4261/7339)   Resolving deltas:  59% (4334/7339)   Resolving deltas:  60% (4407/7339)   Resolving deltas:  61% (4477/7339)   Resolving deltas:  62% (4551/7339)   Resolving deltas:  63% (4627/7339)   Resolving deltas:  64% (4708/7339)   Resolving deltas:  65% (4772/7339)   Resolving deltas:  66% (4845/7339)   Resolving deltas:  67% (4934/7339)   Resolving deltas:  68% (4997/7339)   Resolving deltas:  69% (5064/7339)   Resolving deltas:  70% (5140/7339)   Resolving deltas:  71% (5214/7339)   Resolving deltas:  72% (5286/7339)   Resolving deltas:  73% (5358/7339)   Resolving deltas:  74% (5434/7339)   Resolving deltas:  75% (5507/7339)   Resolving deltas:  76% (5578/7339)   Resolving deltas:  77% (5652/7339)   Resolving deltas:  78% (5726/7339)   Resolving deltas:  79% (5801/7339)   Resolving deltas:  80% (5878/7339)   Resolving deltas:  81% (5945/7339)   Resolving deltas:  82% (6021/7339)   Resolving deltas:  83% (6099/7339)   Resolving deltas:  84% (6165/7339)   Resolving deltas:  85% (6239/7339)   Resolving deltas:  86% (6312/7339)   Resolving deltas:  87% (6389/7339)   Resolving deltas:  88% (6459/7339)   Resolving deltas:  89% (6535/7339)   Resolving deltas:  90% (6607/7339)   Resolving deltas:  91% (6681/7339)   Resolving deltas:  92% (6752/7339)   Resolving deltas:  93% (6826/7339)   Resolving deltas:  94% (6902/7339)   Resolving deltas:  95% (6990/7339)   Resolving deltas:  96% (7050/7339)   Resolving deltas:  97% (7119/7339)   Resolving deltas:  98% (7193/7339)   Resolving deltas:  99% (7269/7339)   Resolving deltas: 100% (7339/7339)   Resolving deltas: 100% (7339/7339), done.
Checking connectivity... done.

travis_time:end:147e2f89:start=1496815097246209518,finish=1496815101353262874,duration=4107053356$ cd chef/chef
travis_time:start:04b13d60$ git fetch origin +refs/pull/6193/merge:
remote: Counting objects: 23, done.[K
remote: Compressing objects:  11% (1/9)   [Kremote: Compressing objects:  22% (2/9)   [Kremote: Compressing objects:  33% (3/9)   [Kremote: Compressing objects:  44% (4/9)   [Kremote: Compressing objects:  55% (5/9)   [Kremote: Compressing objects:  66% (6/9)   [Kremote: Compressing objects:  77% (7/9)   [Kremote: Compressing objects:  88% (8/9)   [Kremote: Compressing objects: 100% (9/9)   [Kremote: Compressing objects: 100% (9/9), done.[K
remote: Total 23 (delta 17), reused 19 (delta 14), pack-reused 0[K
Unpacking objects:   4% (1/23)   Unpacking objects:   8% (2/23)   Unpacking objects:  13% (3/23)   Unpacking objects:  17% (4/23)   Unpacking objects:  21% (5/23)   Unpacking objects:  26% (6/23)   Unpacking objects:  30% (7/23)   Unpacking objects:  34% (8/23)   Unpacking objects:  39% (9/23)   Unpacking objects:  43% (10/23)   Unpacking objects:  47% (11/23)   Unpacking objects:  52% (12/23)   Unpacking objects:  56% (13/23)   Unpacking objects:  60% (14/23)   Unpacking objects:  65% (15/23)   Unpacking objects:  69% (16/23)   Unpacking objects:  73% (17/23)   Unpacking objects:  78% (18/23)   Unpacking objects:  82% (19/23)   Unpacking objects:  86% (20/23)   Unpacking objects:  91% (21/23)   Unpacking objects:  95% (22/23)   Unpacking objects: 100% (23/23)   Unpacking objects: 100% (23/23), done.
From https://github.com/chef/chef
 * branch            refs/pull/6193/merge -> FETCH_HEAD

travis_time:end:04b13d60:start=1496815101363295069,finish=1496815102235801378,duration=872506309$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout
Setting environment variables from .travis.yml
$ export FORCE_FFI_YAJL=ext
$ export TEST_GEM=foodcritic/foodcritic

travis_fold:start:rvmtravis_time:start:0f506590$ rvm use 2.4.1 --install --binary --fuzzy
ruby-2.4.1 is not installed - installing.
Searching for binary rubies, this might take some time.
Found remote file https://rubies.travis-ci.org/ubuntu/14.04/x86_64/ruby-2.4.1.tar.bz2
Checking requirements for ubuntu.
Requirements installation successful.
ruby-2.4.1 - #configure
ruby-2.4.1 - #download
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
 73 14.3M   73 10.5M    0     0  38.4M      0 --:--:-- --:--:-- --:--:-- 38.4M100 14.3M  100 14.3M    0     0  48.5M      0 --:--:-- --:--:-- --:--:--  188M
No checksum for downloaded archive, recording checksum in user configuration.
ruby-2.4.1 - #validate archive
ruby-2.4.1 - #extract
ruby-2.4.1 - #validate binary
ruby-2.4.1 - #setup
ruby-2.4.1 - #gemset created /home/travis/.rvm/gems/ruby-2.4.1@global
ruby-2.4.1 - #importing gemset /home/travis/.rvm/gemsets/global.gems|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|.
ruby-2.4.1 - #generating global wrappers|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-.
ruby-2.4.1 - #uninstalling gem rubygems-bundler-1.4.4|/.
ruby-2.4.1 - #gemset created /home/travis/.rvm/gems/ruby-2.4.1
ruby-2.4.1 - #importing gemset /home/travis/.rvm/gemsets/default.gems|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/.
ruby-2.4.1 - #generating default wrappers|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\.
Using /home/travis/.rvm/gems/ruby-2.4.1

travis_time:end:0f506590:start=1496815118747090967,finish=1496815150267647807,duration=31520556840travis_fold:end:rvm$ export BUNDLE_GEMFILE=$PWD/Gemfile
travis_fold:start:cache.1Setting up build cache
$ export CASHER_DIR=$HOME/.casher
travis_time:start:0dae837b$ Installing caching utilities

travis_time:end:0dae837b:start=1496815151651813254,finish=1496815151735929732,duration=84116478travis_time:start:110a0dc8
travis_time:end:110a0dc8:start=1496815151755869369,finish=1496815151769874088,duration=14004719travis_time:start:081f1b68attempting to download cache archive
fetching PR.6193/cache-linux-trusty-84469db0cd70237688a138f1b0e958a886d653cae71aa0745ef757c250603464--rvm-2.4.1--gemfile-Gemfile.tgz
fetching PR.6193/cache--rvm-2.4.1--gemfile-Gemfile.tgz
fetching master/cache-linux-trusty-84469db0cd70237688a138f1b0e958a886d653cae71aa0745ef757c250603464--rvm-2.4.1--gemfile-Gemfile.tgz
found cache

travis_time:end:081f1b68:start=1496815151785180914,finish=1496815154803962728,duration=3018781814travis_fold:end:cache.1
travis_fold:start:cache.bundlertravis_time:start:035e331a
travis_time:end:035e331a:start=1496815154819853579,finish=1496815154838161188,duration=18307609travis_time:start:00c89ec0adding /home/travis/build/chef/chef/vendor/bundle to cache
creating directory /home/travis/build/chef/chef/vendor/bundle

travis_time:end:00c89ec0:start=1496815154849072653,finish=1496815161381918969,duration=6532846316travis_fold:end:cache.bundler$ ruby --version
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
$ rvm --version
rvm 1.27.0 (latest) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]
$ bundle --version
Bundler version 1.15.1
$ gem --version
2.6.12
travis_fold:start:before_install.1travis_time:start:1956fe5a$ gem update --system $(grep rubygems omnibus_overrides.rb | cut -d'"' -f2)
Updating rubygems-update
Fetching: rubygems-update-2.6.11.gemFetching: rubygems-update-2.6.11.gem (  1%)Fetching: rubygems-update-2.6.11.gem (  2%)Fetching: rubygems-update-2.6.11.gem (  3%)Fetching: rubygems-update-2.6.11.gem (  4%)Fetching: rubygems-update-2.6.11.gem (  5%)Fetching: rubygems-update-2.6.11.gem (  7%)Fetching: rubygems-update-2.6.11.gem (  9%)Fetching: rubygems-update-2.6.11.gem ( 11%)Fetching: rubygems-update-2.6.11.gem ( 13%)Fetching: rubygems-update-2.6.11.gem ( 15%)Fetching: rubygems-update-2.6.11.gem ( 18%)Fetching: rubygems-update-2.6.11.gem ( 20%)Fetching: rubygems-update-2.6.11.gem ( 22%)Fetching: rubygems-update-2.6.11.gem ( 24%)Fetching: rubygems-update-2.6.11.gem ( 26%)Fetching: rubygems-update-2.6.11.gem ( 28%)Fetching: rubygems-update-2.6.11.gem ( 30%)Fetching: rubygems-update-2.6.11.gem ( 33%)Fetching: rubygems-update-2.6.11.gem ( 35%)Fetching: rubygems-update-2.6.11.gem ( 37%)Fetching: rubygems-update-2.6.11.gem ( 39%)Fetching: rubygems-update-2.6.11.gem ( 41%)Fetching: rubygems-update-2.6.11.gem ( 43%)Fetching: rubygems-update-2.6.11.gem ( 46%)Fetching: rubygems-update-2.6.11.gem ( 48%)Fetching: rubygems-update-2.6.11.gem ( 50%)Fetching: rubygems-update-2.6.11.gem ( 52%)Fetching: rubygems-update-2.6.11.gem ( 54%)Fetching: rubygems-update-2.6.11.gem ( 56%)Fetching: rubygems-update-2.6.11.gem ( 58%)Fetching: rubygems-update-2.6.11.gem ( 61%)Fetching: rubygems-update-2.6.11.gem ( 63%)Fetching: rubygems-update-2.6.11.gem ( 65%)Fetching: rubygems-update-2.6.11.gem ( 67%)Fetching: rubygems-update-2.6.11.gem ( 69%)Fetching: rubygems-update-2.6.11.gem ( 71%)Fetching: rubygems-update-2.6.11.gem ( 74%)Fetching: rubygems-update-2.6.11.gem ( 76%)Fetching: rubygems-update-2.6.11.gem ( 78%)Fetching: rubygems-update-2.6.11.gem ( 80%)Fetching: rubygems-update-2.6.11.gem ( 82%)Fetching: rubygems-update-2.6.11.gem ( 84%)Fetching: rubygems-update-2.6.11.gem ( 86%)Fetching: rubygems-update-2.6.11.gem ( 89%)Fetching: rubygems-update-2.6.11.gem ( 91%)Fetching: rubygems-update-2.6.11.gem ( 93%)Fetching: rubygems-update-2.6.11.gem ( 95%)Fetching: rubygems-update-2.6.11.gem ( 97%)Fetching: rubygems-update-2.6.11.gem ( 99%)Fetching: rubygems-update-2.6.11.gem (100%)Fetching: rubygems-update-2.6.11.gem (100%)
Successfully installed rubygems-update-2.6.11
Installing RubyGems 2.6.11
RubyGems 2.6.11 installed



------------------------------------------------------------------------------

RubyGems installed the following executables:
	/home/travis/.rvm/rubies/ruby-2.4.1/bin/gem

RubyGems system software updated

travis_time:end:1956fe5a:start=1496815162688094094,finish=1496815168181709948,duration=5493615854travis_fold:end:before_install.1travis_fold:start:before_install.2travis_time:start:0aa28a2a$ gem --version
2.6.11

travis_time:end:0aa28a2a:start=1496815168192871005,finish=1496815168471896708,duration=279025703travis_fold:end:before_install.2travis_fold:start:before_install.3travis_time:start:153a2198$ rvm @global do gem uninstall bundler -a -x
Removing bundle
Removing bundler
Successfully uninstalled bundler-1.15.1

travis_time:end:153a2198:start=1496815168493403989,finish=1496815170018086529,duration=1524682540travis_fold:end:before_install.3travis_fold:start:before_install.4travis_time:start:03fa66d4$ gem install bundler -v $(grep bundler omnibus_overrides.rb | cut -d'"' -f2)
Fetching: bundler-1.14.6.gemFetching: bundler-1.14.6.gem (  1%)Fetching: bundler-1.14.6.gem (  2%)Fetching: bundler-1.14.6.gem (  3%)Fetching: bundler-1.14.6.gem (  4%)Fetching: bundler-1.14.6.gem (  5%)Fetching: bundler-1.14.6.gem (  6%)Fetching: bundler-1.14.6.gem (  7%)Fetching: bundler-1.14.6.gem (  8%)Fetching: bundler-1.14.6.gem (  9%)Fetching: bundler-1.14.6.gem ( 10%)Fetching: bundler-1.14.6.gem ( 16%)Fetching: bundler-1.14.6.gem ( 21%)Fetching: bundler-1.14.6.gem ( 26%)Fetching: bundler-1.14.6.gem ( 31%)Fetching: bundler-1.14.6.gem ( 36%)Fetching: bundler-1.14.6.gem ( 41%)Fetching: bundler-1.14.6.gem ( 46%)Fetching: bundler-1.14.6.gem ( 52%)Fetching: bundler-1.14.6.gem ( 57%)Fetching: bundler-1.14.6.gem ( 62%)Fetching: bundler-1.14.6.gem ( 67%)Fetching: bundler-1.14.6.gem ( 72%)Fetching: bundler-1.14.6.gem ( 77%)Fetching: bundler-1.14.6.gem ( 82%)Fetching: bundler-1.14.6.gem ( 87%)Fetching: bundler-1.14.6.gem ( 93%)Fetching: bundler-1.14.6.gem ( 98%)Fetching: bundler-1.14.6.gem (100%)Fetching: bundler-1.14.6.gem (100%)
Successfully installed bundler-1.14.6
1 gem installed

travis_time:end:03fa66d4:start=1496815170034355188,finish=1496815171002656418,duration=968301230travis_fold:end:before_install.4travis_fold:start:before_install.5travis_time:start:05487ddf$ bundle --version
Bundler version 1.14.6

travis_time:end:05487ddf:start=1496815171023556791,finish=1496815171544016154,duration=520459363travis_fold:end:before_install.5travis_fold:start:before_install.6travis_time:start:230a76a0$ rm -f .bundle/config

travis_time:end:230a76a0:start=1496815171568207452,finish=1496815171587870559,duration=19663107travis_fold:end:before_install.6travis_fold:start:install.bundlertravis_time:start:0e401a7f$ bundle install --jobs=3 --retry=3 --deployment --path=${BUNDLE_PATH:-vendor/bundle}
Using rake 12.0.0
Using concurrent-ruby 1.0.5
Using i18n 0.8.1
Using minitest 5.10.2
Using thread_safe 0.3.6
Using addressable 2.4.0
Using mixlib-cli 1.7.0
Using ast 2.3.0
Using backports 3.8.0
Using debug_inspector 0.0.3
Using blankslate 2.1.2.4
Using builder 3.2.3
Using bundler 1.14.6
Using thor 0.19.4
Using byebug 9.0.6
Using fuzzyurl 0.9.0
Using mixlib-config 2.2.4
Using mixlib-shellout 2.2.7
Using libyajl2 1.2.0
Using hashie 3.5.5
Using mixlib-log 1.7.1
Using rack 2.0.3
Using uuidtools 2.1.5
Using diff-lcs 1.3
Using erubis 2.7.0
Using highline 1.7.8
Using iniparse 1.4.2
Using net-ssh 4.1.0
Using ffi 1.9.18
Using ipaddress 0.8.3
Using plist 3.3.0
Using systemu 2.6.5
Using wmi-lite 1.0.0
Using proxifier 1.0.3
Using rspec-support 3.6.0
Using multi_json 1.12.1
Using net-telnet 0.1.1
Using sfl 2.3
Using syslog-logger 1.6.8
Using powerpack 0.1.1
Using ruby-progressbar 1.8.1
Using unicode-display_width 1.2.1
Using coderay 1.1.1
Using docile 1.1.5
Using excon 0.55.0
Using json 2.1.0
Using multipart-post 2.0.0
Using net-http-persistent 2.9.4
Using net-http-pipeline 1.0.1
Using retriable 3.0.2
Using httpclient 2.8.3
Using method_source 0.8.2
Using parallel 1.11.2
Using slop 3.6.0
Using rubyzip 1.2.1
Using semverse 2.0.0
Using sslshake 1.2.0
Using little-plugger 1.1.4
Using nori 2.6.0
Using rubyntlm 0.6.2
Using mixlib-versioning 1.1.0
Using netrc 0.11.0
Using websocket 1.2.4
Using rb-readline 0.5.4
Using ruby-prof 0.16.2
Using ruby-shadow 2.5.0
Using simplecov-html 0.10.1
Using tomlrb 1.2.4
Using yard 0.9.9
Using rainbow 2.2.2
Using tzinfo 1.2.3
Using launchy 2.4.3
Using appbundler 0.10.0
Using parser 2.4.0.0
Using binding_of_caller 0.7.2
Using parslet 1.5.0
Using gyoku 1.3.1
Using bundler-audit 0.5.0 from https://github.com/rubysec/bundler-audit.git (at master@6eb5a81)
Using iso8601 0.9.1
Using chef-config 13.2.7 from source at `chef-config`
Using ffi-yajl 2.3.0
Using mixlib-authentication 1.4.1
Using net-sftp 2.1.2
Using net-ssh-gateway 2.0.0
Using net-scp 1.2.1
Using ethon 0.10.1
Using gssapi 1.2.0
Using rspec-core 3.6.0
Using rspec-expectations 3.6.0
Using rspec-mocks 3.6.0
Using docker-api 1.33.4
Using faraday 0.12.1
Using pry 0.10.4
Using logging 2.2.2
Using mixlib-install 3.2.1
Using pusher-client 0.6.2
Using simplecov 0.14.1
Using activesupport 5.1.1
Using rubocop 0.47.1
Using toml 0.1.2
Using mixlib-archive 0.4.1
Using chef-zero 13.0.0
Using ohai 13.1.0
Using specinfra 2.67.10
Using typhoeus 0.8.0
Using net-ssh-multi 1.2.1
Using rspec-its 1.2.0
Using rspec 3.6.0
Using faraday-http-cache 2.0.0
Using faraday_middleware 0.11.0.1
Using gh 0.15.1
Using rspec_junit_formatter 0.2.3
Using pry-byebug 3.4.2
Using pry-remote 0.1.8
Using pry-stack_explorer 0.4.9.2
Using winrm 2.2.3
Using chefstyle 0.5.0 from https://github.com/chef/chefstyle.git (at master@b2bf89d)
Using sawyer 0.8.1
Using cheffish 13.0.0
Using serverspec 2.38.1
Using winrm-fs 1.0.1
Using octokit 4.7.0
Using travis 1.8.8
Using chef 13.2.7 from source at `.`
Using train 0.23.0
Using github_changelog_generator 1.14.2 from https://github.com/chef/github-changelog-generator (at master@7ab4953)
Using inspec 1.25.1
Bundle complete! 24 Gemfile dependencies, 127 gems now installed.
Bundled gems are installed into ./vendor/bundle.

travis_time:end:0e401a7f:start=1496815171602600170,finish=1496815173632992741,duration=2030392571travis_fold:end:install.bundlertravis_fold:start:before_script.1travis_time:start:1909d2a1$ echo --color > .rspec

travis_time:end:1909d2a1:start=1496815173646267300,finish=1496815173656118090,duration=9850790travis_fold:end:before_script.1travis_fold:start:before_script.2travis_time:start:0bcb6a78$ echo -fp >> .rspec

travis_time:end:0bcb6a78:start=1496815173680567788,finish=1496815173710046348,duration=29478560travis_fold:end:before_script.2travis_fold:start:before_script.3travis_time:start:20a0c174$ sudo sed -i -e 's/^Defaults\tsecure_path.*$//' /etc/sudoers || true
This job is running on container-based infrastructure, which does not allow use of 'sudo', setuid, and setgid executables.
If you require sudo, add 'sudo: required' to your .travis.yml


travis_time:end:20a0c174:start=1496815173734382739,finish=1496815173769283078,duration=34900339travis_fold:end:before_script.3travis_time:start:0016f884$ bundle exec tasks/bin/run_external_test $TEST_GEM master rake test
Cloning into '/tmp/chef-external-test20170607-5022-jl3cl7'...
Already on 'master'
Your branch is up-to-date with 'origin/master'.
Fetching gem metadata from https://rubygems.org/........
Fetching version metadata from https://rubygems.org/.
Fetching dependency metadata from https://rubygems.org/.
Resolving dependencies...
Using rake 12.0.0
Installing ansi 1.5.0
Installing ffi 1.9.18 with native extensions
Installing contracts 0.16.0
Installing builder 3.2.3
Installing gherkin 4.1.3
Installing cucumber-wire 0.0.1
Installing diff-lcs 1.3
Installing multi_json 1.12.1
Installing multi_test 0.1.2
Installing rspec-support 3.6.0
Installing thor 0.19.4
Installing ast 2.3.0
Installing powerpack 0.1.1
Installing ruby-progressbar 1.8.1
Installing unicode-display_width 1.2.1
Installing coderay 1.1.1
Installing docile 1.1.5
Installing erubis 2.7.0
Installing mini_portile2 2.2.0
Installing rufus-lru 1.1.0
Installing polyglot 0.3.5
Installing yajl-ruby 1.3.0 with native extensions
Installing hpricot 0.8.6 with native extensions
Installing json 2.1.0 with native extensions
Installing method_source 0.8.2
Installing minitest 5.10.2
Installing mixlib-shellout 2.2.7
Installing mustache 1.0.5
Installing slop 3.6.0
Installing rdiscount 2.2.0.1 with native extensions
Installing simplecov-html 0.10.1
Using bundler 1.14.6
Installing rainbow 2.2.2 with native extensions
Installing childprocess 0.5.9
Installing cucumber-core 1.5.0
Installing rspec-expectations 3.6.0
Installing rspec-core 3.6.0
Installing rspec-mocks 3.6.0
Installing parser 2.4.0.0
Installing nokogiri 1.8.0 with native extensions
Installing treetop 1.6.8
Installing minitest-reporters 1.1.14
Installing pry 0.10.4
Installing ronn 0.7.3
Installing simplecov 0.14.1
Installing cucumber 2.4.0
Installing fuubar 2.2.0
Installing rspec-its 1.2.0
Installing rspec 3.6.0
Installing rubocop 0.47.1
Using foodcritic 11.1.0 from source at `.`
Installing aruba 0.14.2
Installing rspec-command 1.0.3
Installing chefstyle 0.5.0
Bundle complete! 12 Gemfile dependencies, 55 gems now installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
Post-install message from aruba:
Use on ruby 1.8.7
* Make sure you add something like that to your `Gemfile`. Otherwise you will
  get cucumber > 2 and this will fail on ruby 1.8.7

  gem 'cucumber', '~> 1.3.20'

With aruba >= 1.0 there will be breaking changes. Make sure to read https://github.com/cucumber/aruba/blob/master/History.md for 1.0.0
/home/travis/.rvm/rubies/ruby-2.4.1/bin/ruby -I/home/travis/.rvm/gems/ruby-2.4.1/gems/rspec-core-3.6.0/lib:/home/travis/.rvm/gems/ruby-2.4.1/gems/rspec-support-3.6.0/lib /home/travis/.rvm/gems/ruby-2.4.1/gems/rspec-core-3.6.0/exe/rspec --pattern spec/\*\*\{,/\*/\*\*\}/\*_spec.rb --color --format documentation

Randomized with seed 46992

FC061
  with a cookbook with metadata that includes the version keyword and a valid x.y version string
    should not violate rule "FC061"
  with a cookbook metadata that includes the version keyword and an invalid single digit version string
    should violate rule "FC061"
  with a cookbook with metadata that includes the version keyword and an invalid version string
    should violate rule "FC061"
  with a cookbook metadata that includes the version keyword that uses string interpolation
    should not violate rule "FC061"
  with a cookbook with metadata that does not include a version keyword
    should not violate rule "FC061"
  with a cookbook metadata that includes the version keyword and an invalid four digit version string
    should violate rule "FC061"
  with a cookbook with metadata that includes the version keyword and a valid version string with double quotes
    should not violate rule "FC061"
  with a cookbook with metadata that includes the version keyword and a valid version string
    should not violate rule "FC061"
  with a cookbook metadata that includes the version keyword that is not a string literal
    should not violate rule "FC061"

FC053
  with a cookbook with a metadata file that does contain the recommends keyword
    should violate rule "FC053"
  with a cookbook with a metadata file that does not contain the recommends keyword
    should not violate rule "FC053"

FC062
  with a cookbook with metadata that does not include a version keyword
    should violate rule "FC062"
  with a cookbook with metadata that includes the version keyword and a valid version string
    should not violate rule "FC062"

FC086
  with a cookbook with a resource that uses data_bag_item
    should not violate rule "FC086"
  with a cookbook with a recipe that uses Chef::EncryptedDataBagItem.load_secret
    should violate rule "FC086"
  with a cookbook with a resource that uses Chef::EncryptedDataBagItem.load_secret
    should violate rule "FC086"
  with a cookbook with a recipe that uses Chef::DataBagItem.load
    should violate rule "FC086"
  with a cookbook with a resource that uses Chef::EncryptedDataBagItem.load_secret
    should violate rule "FC086"

FC072
  with a cookbook with a metadata file that doesn't contain an attribute keyword
    should not violate rule "FC072"
  with a cookbook with a metadata file that contains an attribute keyword
    should violate rule "FC072"

FoodCritic::Review
  is instantiable with no warnings
  #cookbook_paths
    returns the cookbook paths provided when there are multiple
    returns the cookbook paths provided
  #warnings
    returns empty when there are no warnings
    makes the warnings available

FC089
  with a cookbook with a resource that uses Chef::Mixin::ShellOut
    should not violate rule "FC089"
  with a cookbook with a resource that uses Miblib::Shellout
    should not violate rule "FC089"
  with a cookbook with a resource that uses Chef::ShellOut
    should violate rule "FC089"
  with a cookbook with a library that uses Chef::ShellOut
    should violate rule "FC089"

FoodCritic::Linter
  #check
    accepts a scalar with a single cookbook path
    requires a cookbook_path by itself not to be empty
    returns a review when a role path is provided
    returns a review when a cookbook path is provided
    requires a cookbook_path by itself not to be nil
    requires a cookbook_path, role_path or environment_path to be specified
    returns a review when a environment path is provided
    accepts a scalar with a single role path
    accepts an array of cookbook paths
    accepts an array of role paths
    requires a environment_path by itself not to be nil
    requires a environment_path by itself not to be empty
    accepts an array of environment paths
    requires a role_path by itself not to be empty
    accepts a scalar with a single environment path
    requires a role_path by itself not to be nil
  chef version
    should be the latest stable version of Chef
  #list_rules
    does not require cookbook_path, role_path or environment_path to be specified
    returns a rule listing
    runs when --list is specified on the command line
  #load_files!
    should include files found in :include_rules option
    should include rules found in gems if the :search_gems option is true
    should add the default rule file
  #initialize
    is instantiable

FoodCritic::CommandLine
  is instantiable
  #list_rules?
    returns false if ---list is not specified
    returns true if --list is specified
  :search_gems
    is true if -G is specified
    is unset if -G/--search-gems is not specified
    is true if --search-gems is specified
  #role_paths
    returns an empty if no role paths are specified
    returns the provided role path
    returns the provided role paths when there are multiple
  #cookbook_paths
    returns an empty array if no paths are specified
    returns multiple items for multiple specified directories
    ignores known arguments
    returns a single item array for a specified directory
  :rule_file
    is unset if -r/--rule-file is not specified
    is equal to the provided path if -r is set and path is specified
    is equal to the provided path if --rule-file is set and path is specified
  #valid_paths?
    returns false if no paths are specified
    returns true if the specified file exists
    returns false if any on the specified paths do not exist
    returns false if the specified directory does not exist
    returns true if the specified directory exists
    returns true if both specified paths exist
  :progress
    is false if --no-progress is specified
    is true if -P is specified
    is true by default
    is true if --progres is specified
  #show_context?
    is false if --no-context is specified
    is true if -C is specified
    is true if --context is specified
    is unset by default

FC071
  with a cookbook without a LICENSE file but with license of 'All Rights Reserved', using a sub folder
    should not violate rule "FC071"
  with a cookbook without a LICENSE file, using a sub folder
    should violate rule "FC071"
  with a cookbook with a LICENSE file
    should not violate rule "FC071"
  with a cookbook without a LICENSE file
    should violate rule "FC071"
  with a cookbook without a LICENSE file but with license of 'all rights reserved'
    should not violate rule "FC071"
  with a cookbook without a LICENSE file but with license of 'All Rights Reserved'
    should not violate rule "FC071"

FC080
  with a cookbook with a recipe that includes a user resource using supports w/o parens
    should violate rule "FC080"
  with a cookbook with a recipe that includes a user resource using supports
    should violate rule "FC080"
  with a cookbook with a recipe that includes a user resource not using supports
    should not violate rule "FC080"
  with a cookbook with a recipe that includes a user resource and other supports uses
    should not violate rule "FC080"
  with a cookbook with a recipe that includes a resource with supports
    should not violate rule "FC080"

FC066
  with a cookbook with a metadata file that specifies a chef_version
    should not violate rule "FC066"
  with a cookbook with a metadata file that specifies a chef_version with a guard
    should not violate rule "FC066"
  with a cookbook with a metadata file that specifies a chef_version with a splat
    should not violate rule "FC066"
  with a cookbook with a metadata file that does not specify chef_version
    should violate rule "FC066"
  with a cookbook with a metadata file that specifies a chef_version with multiple arguments
    should not violate rule "FC066"
  with a cookbook with a metadata file that specifies a chef_version with parens
    should not violate rule "FC066"

FoodCritic::RuleList
  is instantiable with no warnings
  #rules
    contains the given rule
    is empty when instantiated with an empty rule list

FoodCritic::Api
  #field
    returns fields when the value is an embedded string expression
    returns fields when the value is a method call
    returns both fields if the field is specified twice
    simple_ast
      returns empty if the field is not present
      accepts a symbol for the field name
      raises if the field name is nil
      accepts a string for the field name
      raises if the field name is empty
  #resource_attribute
    raises if the resource does not support XPath
    raises if the attribute name is empty
  #declared_dependencies
    using a non-standard word array
      should eq ["one", "two", "three"]
    using a word array and a one-line block
      should eq ["one", "two", "three"]
    with a simple dependency
      should eq ["one"]
    with no dependencies
      should eq []
    using a word array and a multi-line block
      should eq ["one", "two", "three"]
    with multiple simple dependencies
      should eq ["one", "two", "three"]
    with an invalid options
      should raise ArgumentError
  #read_ast
    raises if the file cannot be read
  #match
    raises if the provided node is nil
    raises if the provided node does not support XPath
    uses the position of the first position node if there are multiple
    returns nil if there is no nested position node
    matched_node_name
      sets the matched name to empty if the element does not have a name
      includes the name of the node in the match
  #cookbook_name
    returns the cookbook name when passed a recipe
    raises if passed an empty string
    returns the cookbook name when passed a template
    returns the cookbook name when passed the cookbook metadata
    raises if passed a nil
    with a metadata.rb
      returns the cookbook name when passed the cookbook metadata with a name field
  #included_recipes
    returns an empty hash if there are no included recipes
    correctly keys an included recipe specified as a string literal
    returns a hash where the values are the matching nodes
    returns a hash keyed by recipe name
    raises if the ast does not support XPath
    embedded expression - recipe name
      returns the literal string component by default
      returns the literal string part of the AST
      returns the literals if asked to include statements with embedded expressions
      returns empty if asked to exclude statements with embedded expressions
    embedded expression - cookbook name
      returns the literal string part of the AST
      returns empty if asked to exclude statements with embedded expressions
      returns the literal string component by default
    embedded expression - partial cookbook name
      returns empty if asked to exclude statements with embedded expressions
      returns the literal string component by default
      returns the literal string part of the AST
  #file_match
    sets the line and column to the beginning of the file
    retains the full provided filename path in the match
    raises an error if the provided filename is nil
    includes the provided filename in the match
  #json_file_to_hash
    raises if the filename is not found
    raises if the json is not valid
    raises if the filename is not provided
  #ruby_code?
    returns true for a snippet of ruby code
    returns false for a unix command
    says an empty string is not ruby code
    coerces arguments to a string
    says a nil is not ruby code
  #resource_attributes_by_type
    raises if the ast does not support XPath
    returns an empty hash if there are no resources
  #literal_searches
    returns empty if the AST has no elements
    returns empty if the AST does not support XPath expressions
    returns the AST elements for each literal search
  #field_value
    is falsy when the value is an embedded string expression
    returns the last value if the field is specified twice
    is falsy when the value is a method call
    simple_ast
      is falsy if the field is not present
      accepts a string for the field name
      raises if the field name is empty
      raises if the field name is nil
      accepts a symbol for the field name
  #attribute_access
    returns empty if the provided ast does not support XPath
    raises if the specified node type is not recognised
    returns empty if the provided ast has no matches
    returns vivified attributes access
    doesn't flag searching for a node by name as symbol access
    does not raise if the specified node type is valid
    ignoring_attributes
      allows any attribute to be ignored
      includes the children of attributes
      allows run_state to be ignored
      coerces ignore values to enumerate them
      allows run_state to be ignored (symbols access)
      can ignore multiple attributes
      allows any attribute to be ignored (symbols access)
      doesn't ignore run_state by default for backwards compatibility
      does not include children of removed attributes
      allows any attribute to be ignored (dot access)
  #cookbook_maintainer
    raises if the path does not exist
    raises if passed an empty string
    raises if passed a nil
    with a metadata.rb
      returns the cookbook maintainer when passed a template
      returns the cookbook maintainer when passed a recipe
      returns the cookbook maintainer when passed the cookbook metadata
  #standard_cookbook_subdirs
    is sorted in alphabetical order
    includes the directories generated by knife create cookbook
    is enumerable
    does not include a subdirectory of a subdirectory
    does not include the spec directory
  #cookbook_maintainer_email
    raises if passed an empty string
    raises if the path does not exist
    raises if passed a nil
    with a metadata.rb
      returns the cookbook maintainer_email when passed a template
      returns the cookbook maintainer_email when passed a recipe
      returns the cookbook maintainer_email when passed the cookbook metadata
  AttFilter
    #is_att_type
      filters out values that are not Chef node attribute types
      returns empty if there are no Chef node attribute types
      returns all filtered nodes
      returns empty if the argument is not enumerable
  exposed_api
    exposes the expected api to rule authors
  #cookbook_base_path
    with a metadata.json
      returns the cookbook dir when passed a nested directory
      returns the cookbook dir when passed the path itself
    with a metadata.rb
      returns the cookbook dir when passed a nested directory
      returns the cookbook dir when passed the path itself
    with complex nested folders with metadata.rb
      returns the cookbook dir when path contains cookbook like names
  #metadata_field
    returns the 'name' value when passed a metadata file and the name field
    it raises if a invalid field is requested
    it raises if a invalid file is requested
  #templates_included
    doesn't mistake render options for partial template names
    returns the path of the containing template when there are no partials
    raises if included partials have cycles
    returns the path of the containing template and any partials
  #resource_attributes
    returns a string value for a literal string
    raises if the resource does not support XPath
    decodes numeric attributes correctly
    returns a truthy value for a literal false
    returns a truthy value for a literal true
    block attributes
      includes attributes with brace block values in the result
      supports multiple block attributes
      includes attributes with do block values in the result
      includes old-style notifications in the result
      includes notifications in the result
      doesn't include method calls in ruby blocks
  #searches
    returns empty if the AST has no elements
    returns empty if the AST does not support XPath expressions
    returns the AST elements for each use of search
  #supported_platforms
    with supports using a string expression
      should eq []
    with multiple platforms
      should eq [{:platform=>"oracle", :versions=>[]}, {:platform=>"redhat", :versions=>[]}, {:platform=>"scientific", :versions=>[]}]
    with complex version constraints
      should eq [{:platform=>"redhat", :versions=>["> 5.0", "< 7.0"]}, {:platform=>"scientific", :versions=>["> 5.0", "< 6.0"]}]
    with a multi-line word list
      should eq [{:platform=>"centos", :versions=>[]}, {:platform=>"fedora", :versions=>[]}, {:platform=>"redhat", :versions=>[]}]
    with a symbol platform with a version constraint
      should eq [{:platform=>"ubuntu", :versions=>[">= 6"]}]
    with supports using a complex string expression
      should eq []
    with a version constraint
      should eq [{:platform=>"redhat", :versions=>[">= 6"]}]
    with a single platform
      should eq [{:platform=>"redhat", :versions=>[]}]
    with a word list
      should eq [{:platform=>"centos", :versions=>[]}, {:platform=>"fedora", :versions=>[]}, {:platform=>"redhat", :versions=>[]}]
    with multiple platforms not in alphabetical order
      should eq [{:platform=>"oracle", :versions=>[]}, {:platform=>"redhat", :versions=>[]}, {:platform=>"scientific", :versions=>[]}]
    with supports but no argument
      should eq []
    with a symbol platform
      should eq [{:platform=>"ubuntu", :versions=>[]}]
    with no platforms
      should eq []
    with both a word list and a non-word list
      should eq [{:platform=>"centos", :versions=>[]}, {:platform=>"fedora", :versions=>[]}, {:platform=>"redhat", :versions=>[]}]
  #notifications
    understands the old-style notifications with timing
    understands old-style notifications with added parentheses
    passes unrecognised notification timings through unchanged
    understands the new-style notifications
    understands new-style notifications with :'symbol' literals as action
    understands the old-style subscriptions with timing
    returns empty if there are no notifications
    understands new-style notifications with added parentheses
    understands the new-style subscriptions
    understands old-style notifications with ruby 1.9 hash syntax
    understands the old-style subscriptions
    understands the old-style notifications
    understands new-style subscriptions with added parentheses
    understands the new-style subscriptions with timing
    understands the new-style notifications with timing
    returns empty if the provided AST does not support XPath
    understands old-style notifications with :'symbol' literals as action
    understands old-style subscriptions with added parentheses
    malformed syntax
      returns empty if only the subscribes action is provided
      returns empty if no subscribes value is provided
      returns empty if the right square bracket is missing
      returns empty if the left square bracket is missing
      returns empty if only the notifies action is provided
      returns empty if no notifies value is provided
      returns empty if the service name is missing
        old-style notifications
        new-style notifications
        old-style subscriptions
        new-style subscriptions
      returns empty if the resource type is missing
        new-style subscriptions
        new-style notifications
        old-style notifications
        old-style subscriptions
      returns empty if the resource name is missing
        new-style notifications
        new-style subscriptions
        old-style subscriptions
        old-style notifications
    supports a resource both notifying and subscribing
      old-style notifications
      new-style notifications
    understands notifications for an execute resource
      old-style subscriptions
      old-style notifications
      old-style notifications
      old-style subscriptions
    resource names as expressions
      returns the AST for node attribute
        new-style notifications
        old-style notifications
      returns the AST for variable reference
        old-style notifications
        new-style notifications
      returns the AST for an embedded string
        new-style notifications
        new-style notifications - complete resource_name
        old-style notifications
    sets the notification timing to immediate if specified as immediate
      old-style subscriptions
      old-style notifications
      new-style notifications
      new-style subscriptions
    sets the notification timing to immediate if specified as immediately
      new-style subscriptions
      new-style notifications
      old-style notifications
      old-style subscriptions
    can be passed an individual resource
      new-style notifications
      new-style subscriptions
      old-style subscriptions
      old-style notifications
    sets the notification timing to delayed if specified
      new-style subscriptions
      old-style notifications
      old-style subscriptions
      new-style notifications
    supports multiple notifications on a single resource
      new-style notifications
      old-style notifications
      old-style subscriptions
      new-style subscriptions
    mark style of notification
      specifies that the notification was in the new style
      specifies that the notification was in the old style
  #resource_type
    raises if the resource does not support XPath
    returns the resource type for a resource
    raises if the resource type cannot be determined
  #find_resources
    restricts by resource type when provided
    allows resource type to be specified as :any
    returns any matches
    returns empty unless the ast supports XPath
    does not restrict by resource type when not provided
  #resources_by_type
    returns an empty hash if there are no resources
    raises if the ast does not support XPath
  #resource_name
    returns the resource name for a resource
    raises if the resource does not support XPath

FC070
  with a word list and a version constraint
    should not violate rule "FC070"
  with a cookbook with a metadata file specifying a valid supports platform, but with a version string
    should violate rule "FC070"
  with a cookbook with a metadata file specifying valid platforms from an array with leading whitespace
    should not violate rule "FC070"
  with a cookbook with a metadata file specifying a single valid supports statement
    should not violate rule "FC070"
  with a cookbook with a metadata file specifying multiple invalid supports statements
    should violate rule "FC070"
  with a cookbook with a metadata file specifying a mix of valid and invalid supports statements
    should violate rule "FC070"
  with a cookbook with a metadata file specifying a valid supports platform, but uppercase
    should violate rule "FC070"
  with a cookbook with a metadata file specifying multiple valid supports statements
    should not violate rule "FC070"
  with a cookbook with a metadata file specifying a single invalid supports statement
    should violate rule "FC070"

FC075
  with a cookbook with a library that uses node.save
    should violate rule "FC075"
  with a cookbook with recipe that doesn't use node.save
    should not violate rule "FC075"
  with a cookbook with a custom resource that uses node.save
    should violate rule "FC075"
  with a cookbook with recipe that includes node['save']
    should not violate rule "FC075"
  with a cookbook with recipe that uses node.save
    should violate rule "FC075"

FC079
  with a cookbook with a recipe that doesn't include an easy_install_package resource
    should not violate rule "FC079"
  with a cookbook with a recipe that includes an easy_install_package resource
    should violate rule "FC079"

FC028
  with a cookbook with a single recipe that uses checks a value against node.platform
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform? with a parentheses
    should violate rule "FC028"
  with a cookbook with a single recipe that calls platform? without parentheses for two platforms
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls platform_family? with parentheses for a single plaform family
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform_family? with a parentheses for 2 plaform families
    should violate rule "FC028"
  with a cookbook with a single recipe that calls platform? without parentheses for a single platform
    should not violate rule "FC028"
  with a cookbook with a single recipe that compares a value against node.platform_family
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform_family? without a parentheses
    should violate rule "FC028"
  with a cookbook with a single recipe that calls platform? with parentheses for a single platform
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls platform? with parentheses for two platforms
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform? with a parentheses for 2 platforms
    should violate rule "FC028"
  with a cookbook with a single recipe that uses checks a value against node.platform_family
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls platform_family? without parentheses for a single platform family
    should not violate rule "FC028"
  with a cookbook with a single recipe that compares a value against node.platform
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform? without a parentheses
    should violate rule "FC028"
  with a cookbook with a single recipe that calls platform_family? with parentheses for two plaform families
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls platform_family? without parentheses for two plaform families
    should not violate rule "FC028"
  with a cookbook with a single recipe that calls node.platform_family? with a parentheses
    should violate rule "FC028"

FC087
  with a cookbook with a library that maps platforms with Chef::Platform.set
    should violate rule "FC087"
  with a cookbook with a library that includes Chef::Platform.foo
    should not violate rule "FC087"

FC074
  with a cookbook with a LWRP that includes a default_action
    should not violate rule "FC074"
  with a cookbook with a LWRP that includes a non-DSL default_action
    should violate rule "FC074"
  with a custom resource
    should not violate rule "FC074"

regression test
  with cookbook subversion
    should match expected output
  with cookbook gems
    should match expected output
  with cookbook partial_search
    should match expected output
  with cookbook cron
    should match expected output
  with cookbook chef_client_updater
    should match expected output
  with cookbook rsync
    should match expected output
  with cookbook chef-vault
    should match expected output
  with cookbook chef-client
    should match expected output
  with cookbook memcached
    should match expected output
  with cookbook lvm
    should match expected output
  with cookbook dynect
    should match expected output
  with cookbook php
    should match expected output
  with cookbook activemq
    should match expected output
  with cookbook xml
    should match expected output
  with cookbook resolver
    should match expected output
  with cookbook sudo
    should match expected output
  with cookbook chef_hostname
    should match expected output
  with cookbook whitelist-node-attrs
    should match expected output
  with cookbook rsyslog
    should match expected output
  with cookbook motd-tail
    should match expected output
  with cookbook database
    should match expected output
  with cookbook yum
    should match expected output
  with cookbook aix
    should match expected output
  with cookbook iis
    should match expected output
  with cookbook homebrew
    should match expected output
  with cookbook ubuntu
    should match expected output
  with cookbook fail2ban
    should match expected output
  with cookbook postfix
    should match expected output
  with cookbook openldap
    should match expected output
  with cookbook drbd
    should match expected output
  with cookbook tftp
    should match expected output
  with cookbook chef-server
    should match expected output
  with cookbook powershell
    should match expected output
  with cookbook erlang
    should match expected output
  with cookbook chef-ingredient
    should match expected output
  with cookbook openssl
    should match expected output
  with cookbook iptables
    should match expected output
  with cookbook vcruntime
    should match expected output
  with cookbook ohai
    should match expected output
  with cookbook build-essential
    should match expected output
  with cookbook ufw
    should match expected output
  with cookbook apt
    should match expected output
  with cookbook kickstart
    should match expected output
  with cookbook tar
    should match expected output
  with cookbook chef
    should match expected output
  with cookbook stompserver
    should match expected output
  with cookbook smokeping
    should match expected output
  with cookbook firewall
    should match expected output
  with cookbook webpi
    should match expected output
  with cookbook passenger_apache2
    should match expected output
  with cookbook ark
    should match expected output
  with cookbook maradns
    should match expected output
  with cookbook auditd
    should match expected output
  with cookbook mysql
    should match expected output
  with cookbook ssh_known_hosts
    should match expected output
  with cookbook wix
    should match expected output
  with cookbook unicorn
    should match expected output
  with cookbook bluepill
    should match expected output
  with cookbook gecode
    should match expected output
  with cookbook chef_nginx
    should match expected output
  with cookbook openssh
    should match expected output
  with cookbook runit
    should match expected output
  with cookbook tomcat
    should match expected output
  with cookbook docker
    should match expected output
  with cookbook keepalived
    should match expected output
  with cookbook logwatch
    should match expected output
  with cookbook maven
    should match expected output
  with cookbook windows
    should match expected output
  with cookbook sql_server
    should match expected output
  with cookbook heartbeat
    should match expected output
  with cookbook boost
    should match expected output
  with cookbook jpackage
    should match expected output
  with cookbook jetty
    should match expected output
  with cookbook aws
    should match expected output
  with cookbook vim
    should match expected output
  with cookbook gunicorn
    should match expected output
  with cookbook chef_handler
    should match expected output
  with cookbook transmission
    should match expected output
  with cookbook perl
    should match expected output
  with cookbook apparmor
    should match expected output
  with cookbook libarchive
    should match expected output
  with cookbook dmg
    should match expected output
  with cookbook users
    should match expected output

FC065
  with a cookbook with a metadata file that does not specify source_url
    should violate rule "FC065"
  with a cookbook with a metadata file that specifies a source_url
    should not violate rule "FC065"

FC063
  with a cookbook with a metadata file that depends on a cookbook, but not itself
    should not violate rule "FC063"
  with a cookbook with a metadata file that doesn't depend on any cookbooks
    should not violate rule "FC063"
  with a cookbook with a metadata file that depends on itself
    should violate rule "FC063"

FC076
  with a cookbook with a metadata file that does contain the conflicts keyword
    should violate rule "FC076"
  with a cookbook with a metadata file that does not contain the conflicts keyword
    should not violate rule "FC076"

FC049
  with webserver.rb
    with name apache
      should violate rule "FC049"
    with multiple names
      should not violate rule "FC049"
    with a string expression in the name
      should not violate rule "FC049"
    with name webserver
      should not violate rule "FC049"
    with multiple mismatched names
      should violate rule "FC049"
  in -B mode
    should not violate rule "FC049"
  in normal mode
    should not violate rule "FC049"
  with webserver.json
    with name apache
      should not violate rule "FC049"
    with name webserver
      should not violate rule "FC049"

FC011
  with a cookbook without a README.md file
    should violate rule "FC011"
  with a cookbook with a README.md file
    should not violate rule "FC011"
  with a cookbook with a README.rdoc file
    should violate rule "FC011"

FC013
  with a cookbook that downloads a file to the Chef file cache
    should not violate rule "FC013"
  with a cookbook that downloads a file to /tmp with an expression
    should violate rule "FC013"
  with a cookbook that downloads a file to a users home directory
    should not violate rule "FC013"
  with a cookbook that downloads a file to /tmp
    should violate rule "FC013"

FC069
  with a cookbook with a metadata file that specifies a valid SPDX license
    should not violate rule "FC069"
  with a cookbook with a metadata file that specifies a license generated by chef generate cookbook
    should violate rule "FC069"
  with a cookbook with a metadata file that specifies ChefDK's non-SPDX all rights reserved string
    should not violate rule "FC069"
  with a cookbook with a metadata file that specifies ChefDK's non-SPDX all rights reserved string with a different casing
    should not violate rule "FC069"
  with a cookbook with a metadata file that specifies a license generated by knife cookbook create
    should violate rule "FC069"
  with a cookbook with a metadata file that specifies a license with parens
    should not violate rule "FC069"
  with a cookbook with a metadata file that does not specifiy a license
    should violate rule "FC069"

FC001
  with a cookbook with a single recipe that reads node attributes via strings
    should not violate rule "FC001"
  with a cookbook with a single recipe that reads node attributes via symbols
    should violate rule "FC001"
  with a cookbook with a single recipe that accesses nested node attributes via symbols
    should violate rule "FC001"
  with a cookbook with a single recipe that passes node attributes accessed via symbols to a template
    should violate rule "FC001"
    should violate rule "FC001"
  with a cookbook that declares default attributes via symbols
    should violate rule "FC001"
  with a cookbook that declares override attributes via symbols
    should violate rule "FC001"
  with a cookbook with a single recipe that searches based on a node attribute accessed via strings
    should not violate rule "FC001"
  with a cookbook that declares normal attributes via symbols
    should violate rule "FC001"
  with a cookbook that declares set attributes via symbols
    should violate rule "FC001"
  with a cookbook with a single recipe that assigns node attributes accessed via symbols to a local variable
    should violate rule "FC001"
  with a cookbook with a single recipe that accesses multiple node attributes via symbols
    should violate rule "FC001"

FC081
  with a cookbook with a metadata file that depends on partial_search cookbook and others
    should violate rule "FC081"
  with a cookbook with a metadata file that depends on partial_search cookbook
    should violate rule "FC081"
  with a cookbook with a metadata file that depends on no cookbooks
    should not violate rule "FC081"

FC008
  with a cookbook with a metadata file not containing maintainer or maintainer_email
    should not violate rule "FC008"
  with a cookbook with a metadata file containing boilerplate maintainer_email from knife CLI
    should violate rule "FC008"
  with a cookbook with a metadata file containing non-boilerplate maintainer and maintainer_email
    should not violate rule "FC008"
  with a cookbook with a metadata file containing boilerplate maintainer from chef CLI
    should violate rule "FC008"
  with a cookbook with a metadata file containing boilerplate maintainer from knife CLI
    should violate rule "FC008"
  with a cookbook with a metadata file containing boilerplate maintainer_email from chef CLI
    should violate rule "FC008"

FC085
  with a cookbook with a LWRP that converges with updated_by_last_action
    should violate rule "FC085"
  with a cookbook with a custom resource that relies on resources for convergence
    should not violate rule "FC085"
  with a cookbook with a custom resource that converges with updated_by_last_action
    should violate rule "FC085"
  with a cookbook with a LWRP that relies on resources for convergence
    should not violate rule "FC085"

FC052
  with a cookbook with a metadata file that does contain the suggests keyword
    should violate rule "FC052"
  with a cookbook with a metadata file that does not contain the suggests keyword
    should not violate rule "FC052"

FC077
  with a cookbook with a metadata file that does not contain the replaces keyword
    should not violate rule "FC077"
  with a cookbook with a metadata file that does contain the replaces keyword
    should violate rule "FC077"

FC068
  with a cookbook with a metadata file that does not specify the license
    should violate rule "FC068"
  with a cookbook with a metadata file that specifies a license (anything)
    should not violate rule "FC068"

FC084
  with a cookbook with a LWRP that includes Chef::REST
    should violate rule "FC084"
  with a cookbook with a LWRP that includes Chef::ServerAPI
    should not violate rule "FC084"
  with a cookbook with a recipe that includes Chef::REST
    should violate rule "FC084"
  with a cookbook with a library that includes Chef::REST
    should violate rule "FC084"
  with a cookbook with a recipe that includes Chef::ServerAPI
    should not violate rule "FC084"
  with a cookbook with a library that includes Chef::ServerAPI
    should not violate rule "FC084"

FC078
  with a cookbook with a metadata file that specifies
    a valid OSI-approved open source license in SPDX format
      should not violate rule "FC078"
    ChefDK's non-SPDX all rights reserved string
      should violate rule "FC078"
    a license generated by chef generate cookbook
      should violate rule "FC078"
    a license with parens
      should not violate rule "FC078"
    no license
      should violate rule "FC078"
    a license generated by knife cookbook create
      should violate rule "FC078"

FoodCritic::Rule
  #matches_tags?
    matches the rule's code
    doesn't match an unrelated code
  #tags
    returns any + the rule's code

FC050
  with a role
    with name Webserver
      should not violate rule "FC050"
    with name web_server
      should not violate rule "FC050"
    with name webserver%
      should violate rule "FC050"
    with name webserver123
      should not violate rule "FC050"
    with name webserver
      should not violate rule "FC050"
    with name web server
      should violate rule "FC050"
    with name web-server
      should not violate rule "FC050"
  with an environment
    with name production
      should not violate rule "FC050"
    with name Production
      should not violate rule "FC050"
    with name pre_production
      should not violate rule "FC050"
    with name production2
      should not violate rule "FC050"
    with name EU West
      should violate rule "FC050"
    with name production (eu-west)
      should violate rule "FC050"
    with name production-eu
      should not violate rule "FC050"

FC091
  with a cookbook with a custom resource that uses attributes
    should violate rule "FC091"
  with a cookbook with a LWRP that uses attributes
    should not violate rule "FC091"
  with a cookbook with a custom resource that uses properties
    should not violate rule "FC091"

FC082
  with a cookbook with a recipe that reads a value using node.set
    should violate rule "FC082"
  with a cookbook with a recipe that sets an attribute with node.set_unless
    should violate rule "FC082"
  with a cookbook with a recipe that sets an attribute with node.normal
    should not violate rule "FC082"
  with a cookbook with a recipe that sets an attribute with node.set
    should violate rule "FC082"

FC016
  with a cookbook with a LWRP that includes a default_action
    should not violate rule "FC016"
  with a cookbook with a LWRP that does not include a default_action
    should violate rule "FC016"
  with a custom resource that includes only an action
    should not violate rule "FC016"
  with a cookbook with a LWRP that includes a non-DSL default_action
    should not violate rule "FC016"
  with a custom resource that includes a property
    should not violate rule "FC016"

FC055
  with a cookbook with a metadata file that specifies a maintainer
    should not violate rule "FC055"
  with a cookbook with a metadata file that specifies a maintainer as an expression
    should not violate rule "FC055"
  with a cookbook with a metadata file that does not specify a maintainer
    should violate rule "FC055"

FC031
  with a cookbook with a metadata file
    should not violate rule "FC031"
  with a cookbook without a metadata file
    should violate rule "FC031"

FoodCritic::Template::ExpressionExtractor
  #expressions
    does not evaluate erb statements
    extracts an expression from within the template
    does not evaluate erb expressions
    excludes comment-only expressions
    returns erb conditionals
    returns empty if the template contains no erb at all
    extracts multiple expressions
    returns empty if the template is empty

FC067
  with a cookbook with a metadata file that specifies a supported platform (anything)
    should not violate rule "FC067"
  with a cookbook with a metadata file that does not specify supports
    should violate rule "FC067"

FC056
  with a cookbook with a metadata file that does not specify a maintainer_email
    should violate rule "FC056"
  with a cookbook with a metadata file that specifies a maintainer_email
    should not violate rule "FC056"
  with a cookbook with a metadata file that specifies a maintainer_email as an expression
    should not violate rule "FC056"

root aliases
  with an attributes root alias
    should violate rule "FC001"
  with a recipe root alias
    should violate rule "FC001"

FC088
  with a cookbook with a library that uses Chef::Mixin::Command
    should violate rule "FC088"
  with a cookbook with a resource that uses Chef::Mixin::Command
    should violate rule "FC088"
  with a cookbook with a resource that uses Bob::Mixin::Command
    should not violate rule "FC088"

FC029
  with a cookbook with a metadata file that doesn't contain the recipe keyword
    should not violate rule "FC029"
  with a cookbook with a metadata file that contains the recipe keyword and stores full recipe name as a var
    should not violate rule "FC029"
  with a cookbook with a metadata file that contains the recipe keyword and lacks the cookbook name
    should violate rule "FC029"
  with a cookbook with a metadata file that contains the recipe keyword and stores part of the recipe name as a var
    should not violate rule "FC029"
  with a cookbook with a metadata file that contains contain the recipe keyword with the cookbook name only
    should not violate rule "FC029"
  with a cookbook with a metadata file that contains the recipe keyword with the cookbook::recipe format name
    should not violate rule "FC029"

FoodCritic::Warning
  failure indication
    is true if fail_tags do match
    is false if no fail_tags match

FC042
  with a cookbook with a single recipe that uses require_recipe
    should violate rule "FC042"
  with a cookbook with a single recipe that uses include_recipe
    should not violate rule "FC042"

FoodCritic::Chef
  #valid_query?
    raises if the query is nil
    coerces the provided object to a string
    raises if the query is empty
  #chef_dsl_methods
    returns dsl methods as symbols
    does not return an empty
    returns an enumerable
  #resource_attribute?
    raises if the attribute_name is nil
    returns true for unrecognised resources
    raises if the resource_type is empty
    returns true if the resource attribute is known
    raises if the attribute_name is empty
    returns false if the resource attribute is not known
    allows the resource type to be passed as a string
    allows the attribute_name to be passed as a string
    raises if the resource_type is nil

FC007
  with an unknowable include_recipe
    with a parial string expression
      should not violate rule "FC007"
    with a variable
      should not violate rule "FC007"
    with a string expression
      should not violate rule "FC007"
    with a node attribute
      should not violate rule "FC007"
  with a declared dependency
    should not violate rule "FC007"
    with parens and ::default
      should not violate rule "FC007"
    with ::default
      should not violate rule "FC007"
    with parens
      should not violate rule "FC007"
  with an undeclared dependency
    should violate rule "FC007"
    with parens
      should violate rule "FC007"
    with ::default
      should violate rule "FC007"
    with parens and ::default
      should violate rule "FC007"
  with multiple includes
    should violate rule "FC007"
  with multiple dependencies
    using a non-standard word array
      behaves like multiple includes
        with undeclared includes
          should violate rule "FC007"
          should violate rule "FC007"
        with declared includes
          should not violate rule "FC007"
    using multiple depends
      behaves like multiple includes
        with undeclared includes
          should violate rule "FC007"
          should violate rule "FC007"
        with declared includes
          should not violate rule "FC007"
    using a word array and a one-line block
      behaves like multiple includes
        with declared includes
          should not violate rule "FC007"
        with undeclared includes
          should violate rule "FC007"
          should violate rule "FC007"
    using a word array and a multi-line block
      behaves like multiple includes
        with declared includes
          should not violate rule "FC007"
        with undeclared includes
          should violate rule "FC007"
          should violate rule "FC007"
  with an include from the same cookbook
    should not violate rule "FC007"
    with the shorthand syntax
      should not violate rule "FC007"

FC092
  with a cookbook with a LWRP that defines actions
    should not violate rule "FC092"
  with a cookbook with a custom resource that defines actions
    should violate rule "FC092"
  with a cookbook with a custom resource that doesn't define actions
    should not violate rule "FC092"

FC073
  with both attributes.rb and attributes/default.rb
    should violate rule "FC073"
  with both recipe.rb and recipes/default.rb
    should violate rule "FC073"
  with only attributes.rb
    should not violate rule "FC073"
  with all four
    should violate rule "FC073"
    should violate rule "FC073"
  with only attributes/default.rb
    should not violate rule "FC073"
  with an empty cookbook
    should not violate rule "FC073"
  with only recipe.rb
    should not violate rule "FC073"
  with only recipes/default.rb
    should not violate rule "FC073"

FC012
  with a cookbook with a README.md file
    should not violate rule "FC012"
  with a cookbook without a README file
    should not violate rule "FC012"
  with a cookbook with a README.rdoc file
    should violate rule "FC012"

FC045
  with a cookbook without a metadata file
    should not violate rule "FC045"
  with a cookbook with a metadata file that doesn't include the name keyword
    should violate rule "FC045"
  with a cookbook with a metadata file that includes the name keyword
    should not violate rule "FC045"

FC083
  with a cookbook with a recipe that includes a execute resource specifying path
    should violate rule "FC083"
  with a cookbook with a recipe that includes a execute resource not specifying path
    should not violate rule "FC083"
  with a cookbook with a recipe that doesn't include an execute resource
    should not violate rule "FC083"

FC064
  with a cookbook with a metadata file that specifies a issues_url
    should not violate rule "FC064"
  with a cookbook with a metadata file that does not specify issues_url
    should violate rule "FC064"

Finished in 6 minutes 46 seconds (files took 1.29 seconds to load)
656 examples, 0 failures

Randomized with seed 46992

Coverage report generated for RSpec to /tmp/chef-external-test20170607-5022-jl3cl7/coverage. 778 / 893 LOC (87.12%) covered.
/home/travis/.rvm/rubies/ruby-2.4.1/bin/ruby -S bundle exec cucumber --strict -t ~@build -t ~@context features
Feature: Check String Interpolation
  In order to make my cookbooks more readable
  As a developer
  I want to identify if values are unnecessarily interpolated

  Scenario: Resource name interpolated string (symbol)                                                # features/002_check_string_interpolation.feature:7
    Given a cookbook with a single recipe that creates a directory resource with an interpolated name # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed                                     # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource name interpolated string                                                                       # features/002_check_string_interpolation.feature:12
    Given a cookbook with a single recipe that creates a directory resource with an interpolated name from a string # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed                                                   # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource name string literal                                                          # features/002_check_string_interpolation.feature:17
    Given a cookbook with a single recipe that creates a directory resource with a string literal # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should not be displayed                             # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource name compound expression                                                          # features/002_check_string_interpolation.feature:22
    Given a cookbook with a single recipe that creates a directory resource with a compound expression # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should not be displayed                                  # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource name literal and interpolated                                                                   # features/002_check_string_interpolation.feature:27
    Given a cookbook with a single recipe that creates a directory resource with a literal and interpolated variable # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                                        # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should not be displayed                                                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource name interpolated and literal                                                                      # features/002_check_string_interpolation.feature:32
    Given a cookbook with a single recipe that creates a directory resource with an interpolated variable and a literal # features/step_definitions/cookbook_steps.rb:1049
    When I check the cookbook                                                                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should not be displayed                                                   # features/step_definitions/cookbook_steps.rb:1728

  Scenario: String interpolation in first Hash key                                               # features/002_check_string_interpolation.feature:37
    Given a cookbook with a single recipe for which the first hash key is an interpolated string # features/step_definitions/cookbook_steps.rb:932
    When I check the cookbook                                                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed                                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: String interpolation in first Hash value                                               # features/002_check_string_interpolation.feature:42
    Given a cookbook with a single recipe for which the first hash value is an interpolated string # features/step_definitions/cookbook_steps.rb:932
    When I check the cookbook                                                                      # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed                                  # features/step_definitions/cookbook_steps.rb:1728

  Scenario: String interpolation in heredoc                                        # features/002_check_string_interpolation.feature:47
    Given a cookbook with a single recipe that logs an interpolated string heredoc # features/step_definitions/cookbook_steps.rb:1058
    When I check the cookbook                                                      # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should not be displayed              # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for service commands within execute resources
  In order to control services in an idiomatic way
  As a developer
  I want to identify if service commands are called by execute resources rather than using the service resource

  Scenario: Execute resource starting a service via init.d                  # features/004_check_service_resource_used.feature:7
    Given a cookbook recipe that uses execute to start a service via init.d # features/step_definitions/cookbook_steps.rb:571
    When I check the cookbook                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed               # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Execute resource controlling a service via the service command          # features/004_check_service_resource_used.feature:12
    Given a cookbook recipe that uses execute to <action> a service via the service command # features/004_check_service_resource_used.feature:13
    When I check the cookbook                                                               # features/004_check_service_resource_used.feature:14
    Then the service resource warning 004 <warning>                                         # features/004_check_service_resource_used.feature:15

    Examples: 
      | action  | warning                 |
      | start   | should be displayed     |
      | stop    | should be displayed     |
      | restart | should be displayed     |
      | reload  | should be displayed     |
      | initdb  | should not be displayed |

  Scenario: Execute resource starting a service via upstart                  # features/004_check_service_resource_used.feature:25
    Given a cookbook recipe that uses execute to start a service via upstart # features/step_definitions/cookbook_steps.rb:571
    When I check the cookbook                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resource starting a service via invoke-rc.d                  # features/004_check_service_resource_used.feature:30
    Given a cookbook recipe that uses execute to start a service via invoke-rc.d # features/step_definitions/cookbook_steps.rb:571
    When I check the cookbook                                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed                    # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resource starting a service via the full path to the service command                  # features/004_check_service_resource_used.feature:35
    Given a cookbook recipe that uses execute to start a service via the full path to the service command # features/step_definitions/cookbook_steps.rb:571
    When I check the cookbook                                                                             # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed                                             # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resource starting a service via init.d (multiple commands)             # features/004_check_service_resource_used.feature:40
    Given a cookbook recipe that uses execute to sleep and then start a service via init.d # features/step_definitions/cookbook_steps.rb:571
    When I check the cookbook                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed                              # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resource not controlling a service            # features/004_check_service_resource_used.feature:45
    Given a cookbook recipe that uses execute to list a directory # features/step_definitions/cookbook_steps.rb:576
    When I check the cookbook                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resource using name attribute                                      # features/004_check_service_resource_used.feature:50
    Given a cookbook recipe that uses execute with a name attribute to start a service # features/step_definitions/cookbook_steps.rb:585
    When I check the cookbook                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 004 should be displayed                          # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for resource repetition
  In order to write my recipe without being needlessly verbose
  As a developer
  I want to identify resources that vary minimally so I can reduce copy and paste

  Scenario: Package resource varying only a single attribute                                  # features/005_check_for_resource_repetition.feature:7
    Given a cookbook recipe that declares multiple resources varying only in the package name # features/step_definitions/cookbook_steps.rb:337
    When I check the cookbook                                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should be displayed                                 # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Package resource varying only a single attribute for a small number of resources      # features/005_check_for_resource_repetition.feature:12
    Given a cookbook recipe that declares two or fewer resources varying only in the package name # features/step_definitions/cookbook_steps.rb:395
    When I check the cookbook                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be displayed                                 # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Package resource varying multiple attributes                         # features/005_check_for_resource_repetition.feature:17
    Given a cookbook recipe that declares multiple resources with more variation # features/step_definitions/cookbook_steps.rb:354
    When I check the cookbook                                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be displayed                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Non-varying packages mixed with other resources                                     # features/005_check_for_resource_repetition.feature:22
    Given a cookbook recipe that declares multiple package resources mixed with other resources # features/step_definitions/cookbook_steps.rb:288
    When I check the cookbook                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should be displayed                                   # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Non-contiguous packages mixed with other resources                                        # features/005_check_for_resource_repetition.feature:27
    Given a cookbook recipe that declares non contiguous package resources mixed with other resources # features/step_definitions/cookbook_steps.rb:372
    When I check the cookbook                                                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be displayed                                     # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Execute resources branching                                                                           # features/005_check_for_resource_repetition.feature:32
    Given a cookbook recipe that declares execute resources varying only in the command in branching conditionals # features/step_definitions/cookbook_steps.rb:77
    When I check the cookbook                                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be visible                                                   # features/step_definitions/cookbook_steps.rb:1833

  Scenario: Execute resources branching - too many                                                                         # features/005_check_for_resource_repetition.feature:37
    Given a cookbook recipe that declares too many execute resources varying only in the command in branching conditionals # features/step_definitions/cookbook_steps.rb:77
    When I check the cookbook                                                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should be visible                                                                # features/step_definitions/cookbook_steps.rb:1833

  Scenario: Execute resources branching in provider actions                                                   # features/005_check_for_resource_repetition.feature:42
    Given a cookbook provider that declares execute resources varying only in the command in separate actions # features/step_definitions/cookbook_steps.rb:193
    When I check the cookbook                                                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be shown                                                 # features/step_definitions/cookbook_steps.rb:1841

  Scenario: Execute resources in the same provider action                                                    # features/005_check_for_resource_repetition.feature:47
    Given a cookbook provider that declares execute resources varying only in the command in the same action # features/step_definitions/cookbook_steps.rb:216
    When I check the cookbook                                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should be shown                                                    # features/step_definitions/cookbook_steps.rb:1841

  Scenario Outline: Template resources within a block                                           # features/005_check_for_resource_repetition.feature:52
    Given a cookbook recipe that declares multiple <type> template resources within a block     # features/005_check_for_resource_repetition.feature:53
    When I check the cookbook                                                                   # features/005_check_for_resource_repetition.feature:54
    Then the service resource warning 005 should <show> against the first resource in the block # features/005_check_for_resource_repetition.feature:55

    Examples: 
      | type        | show             |
      | varying     | not be displayed |
      | non-varying | be displayed     |

  Scenario: Directories with different file modes                                        # features/005_check_for_resource_repetition.feature:61
    Given a cookbook recipe that declares multiple directories with different file modes # features/step_definitions/cookbook_steps.rb:266
    When I check the cookbook                                                            # features/step_definitions/cookbook_steps.rb:1490
    Then the service resource warning 005 should not be displayed                        # features/step_definitions/cookbook_steps.rb:1728

Feature: Check file mode
  In order to ensure that file and directory permissions are applied correctly
  As a developer
  I want to identify where the mode may not be interpreted as expected

  Scenario Outline: Specifying file mode                      # features/006_check_file_mode.feature:7
    Given a <resource> resource declared with the mode <mode> # features/006_check_file_mode.feature:8
    When I check the cookbook                                 # features/006_check_file_mode.feature:9
    Then the warning 006 should be <shown_where_invalid>      # features/006_check_file_mode.feature:10

    Examples: 
      | resource      | mode   | shown_where_invalid |
      | cookbook_file | "644"  | valid               |
      | cookbook_file | 644    | invalid             |
      | cookbook_file | 00644  | valid               |
      | directory     | 755    | invalid             |
      | directory     | "755"  | valid               |
      | directory     | 0644   | valid               |
      | directory     | "0644" | valid               |
      | directory     | 400    | invalid             |
      | directory     | 00400  | valid               |
      | file          | "755"  | valid               |
      | file          | 755    | invalid             |
      | file          | 644    | invalid             |
      | file          | 044    | invalid             |
      | file          | "0644" | valid               |
      | file          | ary[1] | valid               |
      | template      | 00400  | valid               |
      | template      | 400    | invalid             |
      | template      | "400"  | valid               |

  Scenario: Unspecified mode                      # features/006_check_file_mode.feature:33
    Given a file resource declared without a mode # features/step_definitions/cookbook_steps.rb:1082
    When I check the cookbook                     # features/step_definitions/cookbook_steps.rb:1490
    Then the warning 006 should not be displayed  # features/step_definitions/cookbook_steps.rb:1723

Feature: Check for unrecognised resource attributes
  In order to identify typos in recipes without the need for a converge
  As a developer
  I want to identify use of standard resources with unrecognised attributes

  Scenario Outline: Unrecognised attribute declared on built-in resource               # features/009_check_for_unrecognised_resource_attributes.feature:7
    Given a recipe that declares a <type> resource with these attributes: <attributes> # features/009_check_for_unrecognised_resource_attributes.feature:8
    When I check the cookbook                                                          # features/009_check_for_unrecognised_resource_attributes.feature:9
    Then the unrecognised attribute warning 009 should be <shown>                      # features/009_check_for_unrecognised_resource_attributes.feature:10

    Examples: 
      | type    | attributes                | shown |
      | file    | punter,group,mode,action  | true  |
      | file    | owner,group,rights,action | false |
      | file    | owner,group,mode,action   | false |
      | file    | action,retries            | false |
      | group   | gid                       | false |
      | group   | gid,membranes             | true  |
      | package | version,action,options    | false |
      | package | verison,action,options    | true  |

  Scenario: Resource declared using recognised attributes               # features/009_check_for_unrecognised_resource_attributes.feature:22
    Given a recipe that declares a resource with standard attributes    # features/step_definitions/cookbook_steps.rb:1187
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP Resource                                               # features/009_check_for_unrecognised_resource_attributes.feature:27
    Given a recipe that declares a user-defined resource                # features/step_definitions/cookbook_steps.rb:1198
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource declared with only a name attribute                # features/009_check_for_unrecognised_resource_attributes.feature:32
    Given a recipe that declares a resource with only a name attribute  # features/step_definitions/cookbook_steps.rb:1149
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Unrecognised attribute on recipe with multiple resources of the same type                 # features/009_check_for_unrecognised_resource_attributes.feature:37
    Given a recipe that declares multiple resources of the same type of which one has a bad attribute # features/step_definitions/cookbook_steps.rb:1207
    When I check the cookbook                                                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should be displayed against the correct resource      # features/step_definitions/cookbook_steps.rb:1875

  Scenario: Resource with conditional attributes                                                              # features/009_check_for_unrecognised_resource_attributes.feature:42
    Given a recipe that declares a resource with recognised attributes and a conditional execution ruby block # features/step_definitions/cookbook_steps.rb:1155
    When I check the cookbook                                                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed                                       # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource with nested block                                                    # features/009_check_for_unrecognised_resource_attributes.feature:47
    Given a recipe that declares a resource with recognised attributes and a nested block # features/step_definitions/cookbook_steps.rb:1170
    When I check the cookbook                                                             # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed                   # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource with attribute method call                                                        # features/009_check_for_unrecognised_resource_attributes.feature:52
    Given a recipe that declares a resource with an attribute value set to the result of a method call # features/step_definitions/cookbook_steps.rb:1139
    When I check the cookbook                                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the unrecognised attribute warning 009 should not be displayed                                # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Uses dsc_resource with the module_version attribute         # features/009_check_for_unrecognised_resource_attributes.feature:57
    Given a recipe that includes dsc_resource with the module_version attribute # features/009_check_for_unrecognised_resource_attributes.feature:58
    When I check the cookbook specifying <version> as the Chef version          # features/009_check_for_unrecognised_resource_attributes.feature:59
    Then the unrecognised attribute warning 009 should be <shown>               # features/009_check_for_unrecognised_resource_attributes.feature:60

    Examples: 
      | version  | shown |
      | 12.18.31 | true  |
      | 12.19.36 | false |

Feature: Check for invalid search syntax
  In order to identify invalid search syntax that will cause my converge to fail
  As a developer
  I want to verify that search expressions use valid Lucene syntax

  Scenario: Invalid search syntax                                                 # features/010_check_search_syntax.feature:7
    Given a cookbook recipe that attempts to perform a search with invalid syntax # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid search syntax warning 010 should be displayed                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Valid search syntax                                                 # features/010_check_search_syntax.feature:12
    Given a cookbook recipe that attempts to perform a search with valid syntax # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid search syntax warning 010 should not be displayed          # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Search with subexpression                                              # features/010_check_search_syntax.feature:17
    Given a cookbook recipe that attempts to perform a search with a subexpression # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook                                                      # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid search syntax warning 010 should not be displayed             # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for overly long ruby blocks
  In order to keep my cookbooks readable
  As a developer
  I want to identify if ruby blocks in my recipes are too long and should be extracted to libraries

  Scenario: No ruby blocks                                       # features/014_check_for_long_ruby_blocks.feature:7
    Given a cookbook that contains no ruby blocks                # features/step_definitions/cookbook_steps.rb:871
    When I check the cookbook                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the long ruby block warning 014 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Short ruby block                                     # features/014_check_for_long_ruby_blocks.feature:12
    Given a cookbook that contains a short ruby block            # features/step_definitions/cookbook_steps.rb:764
    When I check the cookbook                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the long ruby block warning 014 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Long ruby block                                  # features/014_check_for_long_ruby_blocks.feature:17
    Given a cookbook that contains a long ruby block         # features/step_definitions/cookbook_steps.rb:764
    When I check the cookbook                                # features/step_definitions/cookbook_steps.rb:1490
    Then the long ruby block warning 014 should be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Multiple ruby blocks                                                         # features/014_check_for_long_ruby_blocks.feature:22
    Given a recipe that contains both long and short ruby blocks                         # features/step_definitions/cookbook_steps.rb:1131
    When I check the cookbook                                                            # features/step_definitions/cookbook_steps.rb:1490
    Then the long ruby block warning 014 should be displayed against the long block only # features/step_definitions/cookbook_steps.rb:1697

  Scenario: Missing block attribute                                     # features/014_check_for_long_ruby_blocks.feature:27
    Given a recipe that contains a ruby block without a block attribute # features/step_definitions/cookbook_steps.rb:1123
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the long ruby block warning 014 should not be displayed        # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for use of definitions
  In order to benefit from the additional features supported by first-class resources
  As a developer
  I want to identify when definitions are being used so they can be refactored to become Custom Resources

  Scenario: Cookbook contains definition                                                            # features/015_check_for_definitions.feature:7
    Given a cookbook that contains a definition                                                     # features/step_definitions/cookbook_steps.rb:768
    When I check the cookbook                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the definitions are deprecated warning 015 should be displayed against the definition file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Cookbook does not contain a definition - no directory                                       # features/015_check_for_definitions.feature:12
    Given a cookbook that does not contain a definition and has no definitions directory                # features/step_definitions/cookbook_steps.rb:883
    When I check the cookbook                                                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the definitions are deprecated warning 015 should not be displayed against the definition file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Cookbook does not contain a definition - directory                                          # features/015_check_for_definitions.feature:17
    Given a cookbook that does not contain a definition and has a definitions directory                 # features/step_definitions/cookbook_steps.rb:883
    When I check the cookbook                                                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the definitions are deprecated warning 015 should not be displayed against the definition file # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for no LWRP notifications
  In order to ensure resource actions are triggered as expected
  As a developer
  I want to identify when a LWRP does not trigger notifications

  Scenario: LWRP with no notifications                                                                   # features/017_check_for_no_lwrp_notifications.feature:7
    Given a cookbook that contains a LWRP that does not trigger notifications                            # features/step_definitions/cookbook_steps.rb:802
    When I check the cookbook                                                                            # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP does not notify when updated warning 017 should be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with a notification                                                                         # features/017_check_for_no_lwrp_notifications.feature:12
    Given a cookbook that contains a LWRP with a single notification                                         # features/step_definitions/cookbook_steps.rb:779
    When I check the cookbook                                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP does not notify when updated warning 017 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with a notification without parentheses                                                     # features/017_check_for_no_lwrp_notifications.feature:17
    Given a cookbook that contains a LWRP with a single notification without parentheses                     # features/step_definitions/cookbook_steps.rb:783
    When I check the cookbook                                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP does not notify when updated warning 017 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with multiple notifications                                                                 # features/017_check_for_no_lwrp_notifications.feature:22
    Given a cookbook that contains a LWRP with multiple notifications                                        # features/step_definitions/cookbook_steps.rb:854
    When I check the cookbook                                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP does not notify when updated warning 017 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: LWRP using converge_by                                                                     # features/017_check_for_no_lwrp_notifications.feature:27
    Given a cookbook that contains a LWRP that uses converge_by - <block_type> block <with_parens> parentheses # features/017_check_for_no_lwrp_notifications.feature:28
    When I check the cookbook                                                                                  # features/017_check_for_no_lwrp_notifications.feature:29
    Then the LWRP does not notify when updated warning 017 should not be displayed against the provider file   # features/017_check_for_no_lwrp_notifications.feature:30

    Examples: 
      | block_type | with_parens |
      | brace      | with        |
      | do         | with        |
      | do         | without     |

  Scenario: LWRP using use_inline_resources                                                                  # features/017_check_for_no_lwrp_notifications.feature:37
    Given a cookbook that contains a LWRP that uses use_inline_resources                                     # features/step_definitions/cookbook_steps.rb:850
    When I check the cookbook                                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP does not notify when updated warning 017 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Warnings raised for actions individually                                                      # features/017_check_for_no_lwrp_notifications.feature:42
    Given a LWRP with an action :create that notifies with <notify_type> and another :delete that does not notify # features/017_check_for_no_lwrp_notifications.feature:43
    When I check the cookbook                                                                                     # features/017_check_for_no_lwrp_notifications.feature:44
    Then the LWRP does not notify when updated warning 017 should not be shown against the :create action         # features/017_check_for_no_lwrp_notifications.feature:45
    And the LWRP does not notify when updated warning 017 should be shown against the :delete action              # features/017_check_for_no_lwrp_notifications.feature:46

    Examples: 
      | notify_type            |
      | converge_by            |
      | updated_by_last_action |

Feature: Check for use of deprecated LWRP notification syntax
  In order to ensure LWRP notifications continue to work
  As a developer
  I want to identify when a LWRP notification uses the deprecated syntax

  Scenario: LWRP with no notifications                                                                              # features/018_check_for_old_lwrp_notification_syntax.feature:7
    Given a cookbook that contains a LWRP that does not trigger notifications                                       # features/step_definitions/cookbook_steps.rb:802
    When I check the cookbook                                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP uses deprecated notification syntax warning 018 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with deprecated notification syntax                                                            # features/018_check_for_old_lwrp_notification_syntax.feature:12
    Given a cookbook that contains a LWRP that uses the deprecated notification syntax                          # features/step_definitions/cookbook_steps.rb:846
    When I check the cookbook                                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP uses deprecated notification syntax warning 018 should be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with deprecated notification syntax (class variable)                                           # features/018_check_for_old_lwrp_notification_syntax.feature:17
    Given a cookbook that contains a LWRP that uses the deprecated notification syntax with a class variable    # features/step_definitions/cookbook_steps.rb:846
    When I check the cookbook                                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP uses deprecated notification syntax warning 018 should be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP with current notification syntax                                                                   # features/018_check_for_old_lwrp_notification_syntax.feature:22
    Given a cookbook that contains a LWRP that uses the current notification syntax                                 # features/step_definitions/cookbook_steps.rb:779
    When I check the cookbook                                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP uses deprecated notification syntax warning 018 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for consistency in node access
  In order to be consistent in the way I access node attributes
  As a developer
  I want to identify if the same cookbook uses varying approaches to accessing node attributes

  Scenario Outline: Retrieve node attributes                                                             # features/019_check_for_consistent_node_access.feature:7
    Given a cookbook with a single recipe that <accesses><nested> node attributes via <read_access_type> # features/019_check_for_consistent_node_access.feature:8
    When I check the cookbook                                                                            # features/019_check_for_consistent_node_access.feature:9
    Then the attribute consistency warning 019 should be <show_warning>                                  # features/019_check_for_consistent_node_access.feature:10

    Examples: 
      | accesses | read_access_type | nested | show_warning |
      | ignores  | none             |        | not shown    |
      | reads    | symbols          |        | not shown    |
      | reads    | strings          |        | not shown    |
      | reads    | vivified         |        | not shown    |
      | reads    | strings,symbols  |        | shown        |
      | reads    | strings,vivified |        | shown        |
      | reads    | symbols,strings  | nested | shown        |
      | reads    | symbols,vivified |        | shown        |
      | reads    | vivified,strings |        | shown        |
      | reads    | vivified,symbols |        | shown        |
      | updates  | symbols          |        | not shown    |
      | updates  | strings          | nested | not shown    |
      | updates  | vivified         |        | not shown    |
      | updates  | strings,symbols  |        | shown        |
      | updates  | strings,vivified | nested | shown        |
      | updates  | symbols,strings  |        | shown        |
      | updates  | symbols,vivified |        | shown        |
      | updates  | vivified,strings |        | shown        |
      | updates  | vivified,symbols |        | shown        |

  Scenario: Quoted symbols                                                                          # features/019_check_for_consistent_node_access.feature:34
    Given a cookbook with a single recipe that reads node attributes via symbols and quoted_symbols # features/step_definitions/cookbook_steps.rb:954
    When I check the cookbook                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be not shown                                  # features/step_definitions/cookbook_steps.rb:1751

  Scenario: Multiple file matches                                                                       # features/019_check_for_consistent_node_access.feature:39
    Given a cookbook with five recipes                                                                  # features/step_definitions/cookbook_steps.rb:1066
    And three of the recipes read node attributes via strings                                           # features/step_definitions/cookbook_steps.rb:1465
    And two of the recipes read node attributes via symbols                                             # features/step_definitions/cookbook_steps.rb:1471
    When I check the cookbook                                                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be shown for both of the recipes that use symbols # features/step_definitions/cookbook_steps.rb:1633

  Scenario Outline: Ignore node built-in methods                                                                         # features/019_check_for_consistent_node_access.feature:46
    Given a cookbook with a single recipe that <accesses> node attributes via <read_access_type> and calls node.<method> # features/019_check_for_consistent_node_access.feature:47
    When I check the cookbook                                                                                            # features/019_check_for_consistent_node_access.feature:48
    Then the attribute consistency warning 019 should be <show_warning>                                                  # features/019_check_for_consistent_node_access.feature:49

    Examples: 
      | accesses | read_access_type | method    | show_warning |
      | reads    | strings          | platform? | not shown    |
      | reads    | symbols          | run_list  | not shown    |
      | reads    | symbols          | run_state | not shown    |
      | reads    | strings          | run_state | not shown    |
      | reads    | strings          | set       | not shown    |
      | reads    | strings,symbols  | set       | shown        |

  Scenario Outline: Ignore method calls on node values                                                             # features/019_check_for_consistent_node_access.feature:60
    Given a cookbook with a single recipe that <accesses> node attributes via <read_access_type> with <expression> # features/019_check_for_consistent_node_access.feature:61
    When I check the cookbook                                                                                      # features/019_check_for_consistent_node_access.feature:62
    Then the attribute consistency warning 019 should be <show_warning>                                            # features/019_check_for_consistent_node_access.feature:63

    Examples: 
      | accesses | read_access_type | expression                        | show_warning |
      | reads    | symbols          | node.platform_version             | shown        |
      | reads    | symbols          | node.run_list                     | not shown    |
      | reads    | symbols          | node[:foo].chomp                  | not shown    |
      | reads    | symbols          | node[:foo][:bar].split(' ').first | not shown    |
      | reads    | symbols          | node[:foo].bar                    | not shown    |
      | reads    | symbols          | foo = node[:foo].bar              | not shown    |
      | reads    | symbols          | node[:foo].each{\|f\| puts f}     | not shown    |
      | updates  | symbols          | node[:foo].strip                  | not shown    |
      | updates  | strings          | node[:foo].strip                  | shown        |
      | updates  | strings          | foo = node[:foo].strip            | shown        |
      | updates  | symbols          | node['foo'].strip                 | shown        |

  Scenario: Ignore method calls on patched node values                     # features/019_check_for_consistent_node_access.feature:79
    Given a cookbook with a single recipe that calls a patched node method # features/step_definitions/cookbook_steps.rb:967
    When I check the cookbook                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be not shown         # features/step_definitions/cookbook_steps.rb:1751

  Scenario: Ignore explicit method calls (zero-arg)                           # features/019_check_for_consistent_node_access.feature:84
    Given a cookbook with a single recipe that explicitly calls a node method # features/step_definitions/cookbook_steps.rb:984
    When I check the cookbook                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be not shown            # features/step_definitions/cookbook_steps.rb:1751

  Scenario: Ignore explicit method calls (multiple arguments)                                         # features/019_check_for_consistent_node_access.feature:89
    Given a cookbook with a single recipe that explicitly calls a node method with multiple arguments # features/step_definitions/cookbook_steps.rb:984
    When I check the cookbook                                                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be not shown                                    # features/step_definitions/cookbook_steps.rb:1751

  Scenario: User hashes                                                                     # features/019_check_for_consistent_node_access.feature:94
    Given a cookbook with a single recipe that uses a hash value to access a node attribute # features/step_definitions/cookbook_steps.rb:992
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be not shown                          # features/step_definitions/cookbook_steps.rb:1751

  Scenario: Interpolated access                                                                 # features/019_check_for_consistent_node_access.feature:99
    Given a cookbook with a single recipe that mixes node access types in an interpolated value # features/step_definitions/cookbook_steps.rb:939
    When I check the cookbook                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should be shown                                  # features/step_definitions/cookbook_steps.rb:1751

  Scenario: Two cookbooks with differing approaches                                       # features/019_check_for_consistent_node_access.feature:104
    Given a cookbook with a single recipe that reads node attributes via strings only     # features/step_definitions/cookbook_steps.rb:1003
    And another cookbook with a single recipe that reads node attributes via symbols only # features/step_definitions/cookbook_steps.rb:1003
    When I check the cookbook tree                                                        # features/step_definitions/cookbook_steps.rb:1490
    Then the attribute consistency warning 019 should not be displayed                    # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for dodgy provider conditions
  In order to ensure that resources are declared as intended within a resource provider
  As a developer
  I want to identify resource conditions that will be checked only for the first resource

  Scenario: Provider with no condition                                                              # features/021_check_for_dodgy_lwrp_conditions.feature:7
    Given a cookbook that contains a LWRP that declares a resource with no condition                # features/step_definitions/cookbook_steps.rb:802
    When I check the cookbook                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the dodgy resource condition warning 021 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Provider conditions                                                                         # features/021_check_for_dodgy_lwrp_conditions.feature:12
    Given a cookbook that contains a LWRP that declares a resource called <name> with the condition <condition> # features/021_check_for_dodgy_lwrp_conditions.feature:13
    When I check the cookbook                                                                                   # features/021_check_for_dodgy_lwrp_conditions.feature:14
    Then the dodgy resource condition warning 021 <show_warning> be displayed against the provider file         # features/021_check_for_dodgy_lwrp_conditions.feature:15

    Examples: 
      | name                               | condition                                                  | show_warning |
      | "create_site"                      | not_if { ::File.exists?("/tmp/fixed-path")}                | should not   |
      | "create_site"                      | not_if { ::File.exists?("/tmp/#{new_resource.name}")}      | should       |
      | "create_site_#{new_resource.name}" | not_if { ::File.exists?("/tmp/#{new_resource.name}")}      | should not   |
      | "create_site"                      | only_if { ::File.exists?("/tmp/#{new_resource.name}")}     | should       |
      | "create_site_#{new_resource.name}" | only_if { ::File.exists?("/tmp/#{new_resource.name}")}     | should not   |
      | "create_site"                      | only_if "[ ! -f \\"/tmp/#{new_resource.name}\\" ]"         | should       |
      | "create_site"                      | not_if "[ -f \\"/tmp/#{new_resource.name}\\" ]"            | should       |
      | "create_site_#{new_resource.name}" | not_if "[ -f \\"/tmp/#{new_resource.name}\\" ]"            | should not   |
      | "create_site"                      | only_if do ::File.exists?("/tmp/#{new_resource.name}") end | should       |
      | "create_site_#{new_resource.name}" | only_if do ::File.exists?("/tmp/#{new_resource.name}") end | should not   |

Feature: Check for dodgy resource conditions within a loop
  In order to ensure that resources are declared as intended
  As a developer
  I want to identify resource conditions within a loop that will not be re-evaluated

  Scenario: Resource outside a loop                                                                      # features/022_check_for_dodgy_conditions_within_loop.feature:7
    Given a cookbook recipe that declares a resource called "feed_pet" with the condition outside a loop # features/step_definitions/cookbook_steps.rb:237
    When I check the cookbook                                                                            # features/step_definitions/cookbook_steps.rb:1490
    Then the dodgy resource condition warning 022 should not be displayed                                # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Resource within a loop                                                                  # features/022_check_for_dodgy_conditions_within_loop.feature:12
    Given a cookbook recipe that declares a resource called <name> with the condition <condition> in a loop # features/022_check_for_dodgy_conditions_within_loop.feature:13
    When I check the cookbook                                                                               # features/022_check_for_dodgy_conditions_within_loop.feature:14
    Then the dodgy resource condition warning 022 <show_warning> be displayed                               # features/022_check_for_dodgy_conditions_within_loop.feature:15

    Examples: 
      | name                   | condition                                         | show_warning |
      | "feed_pet"             |                                                   | should not   |
      | "feed_pet"             | not_if { ::File.exists?("/tmp/fixed-path")}       | should not   |
      | "feed_pet"             | not_if { ::File.exists?("/tmp/#{pet_name}")}      | should       |
      | "feed_pet"             | only_if { ::File.exists?("/tmp/#{pet_name}")}     | should       |
      | "feed_pet"             | only_if { ::File.exists?(pet_name)}               | should       |
      | "feed_pet_#{pet_name}" | not_if { ::File.exists?("/tmp/#{pet_name}")}      | should not   |
      | "feed_pet"             | not_if { ::File.exists?("/tmp/#{unrelated_var}")} | should not   |
      | "feed_pet"             | only_if "[ -f \\"/tmp/#{pet_name}\\" ]"           | should       |
      | "feed_pet_#{pet_name}" | not_if "[ -f \\"/tmp/#{pet_name}\\" ]"            | should not   |
      | pet_name               | not_if "[ -f \\"/tmp/#{pet_name}\\" ]"            | should not   |

  Scenario: Resource within a multi-arg block                                          # features/022_check_for_dodgy_conditions_within_loop.feature:30
    Given a resource declared with a guard within a loop with multiple block arguments # features/step_definitions/cookbook_steps.rb:1227
    When I check the cookbook                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the dodgy resource condition warning 022 should not be shown                  # features/step_definitions/cookbook_steps.rb:1792

  Scenario: Resource guard contains a block                           # features/022_check_for_dodgy_conditions_within_loop.feature:35
    Given a resource that declares a guard containing a block         # features/step_definitions/cookbook_steps.rb:1241
    When I check the cookbook                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the dodgy resource condition warning 022 should not be shown # features/step_definitions/cookbook_steps.rb:1792

  Scenario: Loop in a definition                                      # features/022_check_for_dodgy_conditions_within_loop.feature:40
    Given a resource declared within a definition                     # features/step_definitions/cookbook_steps.rb:1260
    When I check the cookbook                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the dodgy resource condition warning 022 should not be shown # features/step_definitions/cookbook_steps.rb:1792

Feature: Check for missing platforms
  In order to maximise the portability of my cookbooks
  As a developer
  I want to identify when a recipe misses a popular flavour from a platform family

  Scenario Outline: Platform flavour missing                                  # features/024_check_for_missing_platforms.feature:7
    Given a cookbook recipe with a '<type>' condition for flavours <flavours> # features/024_check_for_missing_platforms.feature:8
    And the cookbook metadata declares support for <supports>                 # features/024_check_for_missing_platforms.feature:9
    When I check the cookbook                                                 # features/024_check_for_missing_platforms.feature:10
    Then the consider adding platform warning 024 <warning>                   # features/024_check_for_missing_platforms.feature:11

    Examples: 
      | type      | supports                    | flavours                                      | warning             |
      | case      |                             | chalk,cheese                                  | should not be shown |
      | case      |                             | debian,ubuntu                                 | should not be shown |
      | case      |                             | centos,redhat,scientific,oracle               | should not be shown |
      | case      |                             | centos,debian,fedora,redhat,scientific,oracle | should not be shown |
      | case      |                             | redhat                                        | should not be shown |
      | case      |                             | centos,redhat                                 | should be shown     |
      | case      | centos,redhat               | centos,redhat                                 | should not be shown |
      | case      |                             | centos,redhat,scientific                      | should be shown     |
      | case      | centos,redhat,scientific    | centos,redhat,scientific                      | should not be shown |
      | case      | centos,debian,scientific    | centos,scientific                             | should not be shown |
      | case      | centos,redhat,scientific    | redhat,scientific                             | should be shown     |
      | case      | debian,redhat,centos,fedora | redhat,centos,fedora                          | should not be shown |
      | platform? |                             | centos,redhat,scientific,oracle               | should not be shown |
      | platform? |                             | redhat                                        | should not be shown |
      | platform? |                             | redhat,scientific                             | should be shown     |
      | platform? | redhat,scientific           | redhat,scientific                             | should not be shown |
      | platform? | centos,redhat,scientific    | centos,scientific                             | should be shown     |
      | platform? | centos,redhat,oracle        | centos,redhat                                 | should be shown     |

  Scenario: Supported platforms specifies versions                                   # features/024_check_for_missing_platforms.feature:34
    Given a cookbook recipe with a 'case' condition for flavours 'redhat,scientific' # features/step_definitions/cookbook_steps.rb:661
    And the cookbook metadata declares support with versions specified               # features/step_definitions/cookbook_steps.rb:1458
    When I check the cookbook                                                        # features/step_definitions/cookbook_steps.rb:1490
    Then the consider adding platform warning 024 should not be shown                # features/step_definitions/cookbook_steps.rb:1763

  Scenario: Unrelated case statement                                    # features/024_check_for_missing_platforms.feature:40
    Given a cookbook recipe with a case condition unrelated to platform # features/step_definitions/cookbook_steps.rb:618
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the consider adding platform warning 024 should not be shown   # features/step_definitions/cookbook_steps.rb:1763

Feature: Check for deprecated gem install
  In order to be clear and concise in my Chef recipes
  As a developer
  I want to use chef_gem in preference to manual compile-time gem install

  Scenario: Normal gem install                                                     # features/025_check_for_deprecated_gem_install.feature:7
    Given a cookbook recipe that installs a gem                                    # features/step_definitions/cookbook_steps.rb:412
    When I check the cookbook specifying 0.10.10 as the Chef version               # features/step_definitions/cookbook_steps.rb:1481
    Then the prefer chef_gem to manual install warning 025 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Compile-time gem install                                                        # features/025_check_for_deprecated_gem_install.feature:12
    Given a cookbook recipe that installs a gem at compile time using the deprecated syntax # features/step_definitions/cookbook_steps.rb:412
    When I check the cookbook specifying 0.10.10 as the Chef version                        # features/step_definitions/cookbook_steps.rb:1481
    Then the prefer chef_gem to manual install warning 025 should be shown                  # features/step_definitions/cookbook_steps.rb:1821

  Scenario: Compile-time gem upgrade                                                        # features/025_check_for_deprecated_gem_install.feature:17
    Given a cookbook recipe that upgrades a gem at compile time using the deprecated syntax # features/step_definitions/cookbook_steps.rb:412
    When I check the cookbook specifying 0.10.10 as the Chef version                        # features/step_definitions/cookbook_steps.rb:1481
    Then the prefer chef_gem to manual install warning 025 should be shown                  # features/step_definitions/cookbook_steps.rb:1821

  Scenario: Compile-time gem install - multiple from array                                                        # features/025_check_for_deprecated_gem_install.feature:22
    Given a cookbook recipe that installs multiple gems from an array at compile time using the deprecated syntax # features/step_definitions/cookbook_steps.rb:412
    When I check the cookbook specifying 0.10.10 as the Chef version                                              # features/step_definitions/cookbook_steps.rb:1481
    Then the prefer chef_gem to manual install warning 025 should be shown                                        # features/step_definitions/cookbook_steps.rb:1821

  Scenario: Compile-time gem install - multiple from wordlist                                                        # features/025_check_for_deprecated_gem_install.feature:27
    Given a cookbook recipe that installs multiple gems from a word list at compile time using the deprecated syntax # features/step_definitions/cookbook_steps.rb:412
    When I check the cookbook specifying 0.10.10 as the Chef version                                                 # features/step_definitions/cookbook_steps.rb:1481
    Then the prefer chef_gem to manual install warning 025 should be shown                                           # features/step_definitions/cookbook_steps.rb:1821

Feature: Check for conditional attribute blocks with only strings
  In order to avoid wrongly actioning a resource
  As a developer
  I want to identify conditional attribute blocks that consist only of strings

  Scenario Outline:                                                                      # features/026_check_for_conditional_block_string.feature:7
    Given a cookbook recipe that declares a resource with a <conditional_attribute>      # features/026_check_for_conditional_block_string.feature:8
    When I check the cookbook                                                            # features/026_check_for_conditional_block_string.feature:9
    Then the conditional block contains only string warning 026 should be <show_warning> # features/026_check_for_conditional_block_string.feature:10

    Examples: 
      | conditional_attribute                   | show_warning |
      | not_if { "ls foo" }                     | shown        |
      | not_if do "ls foo" end                  | shown        |
      | only_if { "ls #{node['foo']['path']}" } | shown        |
      | not_if { "ls #{foo.method()}" }         | shown        |
      | only_if { foo.bar }                     | not shown    |
      | not_if { foo.to_s }                     | not shown    |
      | not_if { File.exists?("/etc/foo") }     | not shown    |

Feature: Check for use of internal attributes
  In order to avoid confusion about the expected state of a converged node
  As a developer
  I want to identify calls to 'internal' resource attributes

  Scenario Outline: Access of internal attributes                                                             # features/027_check_for_internal_attribute_use.feature:7
    Given a cookbook recipe that declares a <resource> resource with the <attribute> attribute set to <value> # features/027_check_for_internal_attribute_use.feature:8
    When I check the cookbook                                                                                 # features/027_check_for_internal_attribute_use.feature:9
    Then the resource sets internal attribute warning 027 should be <show_warning>                            # features/027_check_for_internal_attribute_use.feature:10

    Examples: 
      | resource | attribute    | value              | show_warning |
      | service  | enabled      | true               | shown        |
      | service  | enabled      | false              | shown        |
      | service  | enabled      | [].include?('foo') | shown        |
      | service  | running      | true               | shown        |
      | service  | running      | false              | shown        |
      | service  | running      | [].include?('foo') | shown        |
      | service  | service_name | "foo"              | not shown    |
      | my_lwrp  | enabled      | true               | not shown    |
      | my_lwrp  | running      | true               | not shown    |

Feature: Check for debugger breakpoints
  In order to avoid halting a converge
  As a developer
  I want to identify debugger breakpoints that have not been removed

  Scenario Outline: Debugger breakpoints                                                      # features/030_check_for_debugger_breakpoints.feature:7
    Given a cookbook with a <component> that <includes> a breakpoint                          # features/030_check_for_debugger_breakpoints.feature:8
    When I check the cookbook                                                                 # features/030_check_for_debugger_breakpoints.feature:9
    Then the debugger breakpoint warning 030 should be <show_warning> against the <component> # features/030_check_for_debugger_breakpoints.feature:10

    Examples: 
      | component | includes         | show_warning |
      | library   | does not include | not shown    |
      | library   | includes         | shown        |
      | metadata  | does not include | not shown    |
      | metadata  | includes         | shown        |
      | provider  | does not include | not shown    |
      | provider  | includes         | shown        |
      | recipe    | does not include | not shown    |
      | recipe    | includes         | shown        |
      | resource  | does not include | not shown    |
      | resource  | includes         | shown        |
      | template  | does not include | not shown    |
      | template  | includes         | shown        |

Feature: Check for invalid notification timings
  In order to flag invalid notifications more quickly
  As a developer
  I want to identify notifications that have an invalid timing type

  Scenario Outline: Notification timings                                      # features/032_check_for_invalid_notification_timing.feature:7
    Given a cookbook recipe with a resource that <type> <notification_timing> # features/032_check_for_invalid_notification_timing.feature:8
    When I check the cookbook specifying <version> as the Chef version        # features/032_check_for_invalid_notification_timing.feature:9
    Then the invalid notification timing warning 032 <display> be displayed   # features/032_check_for_invalid_notification_timing.feature:10

    Examples: 
      | type       | notification_timing | version | display    |
      | notifies   |                     | 12.6.0  | should not |
      | notifies   | before              | 12.6.0  | should not |
      | notifies   | immediately         | 12.6.0  | should not |
      | notifies   | immediate           | 12.6.0  | should not |
      | notifies   | delayed             | 12.6.0  | should not |
      | notifies   | imediately          | 12.6.0  | should     |
      | subscribes |                     | 12.6.0  | should not |
      | subscribes | before              | 12.6.0  | should not |
      | subscribes | immediately         | 12.6.0  | should not |
      | subscribes | immediate           | 12.6.0  | should not |
      | subscribes | delayed             | 12.6.0  | should not |
      | subscribes | imediately          | 12.6.0  | should     |

Feature: Check for missing template
  In order to ensure the Chef run is successful
  As a developer
  I want to identify template resources that refer to missing templates

  Scenario Outline: Template types                  # features/033_check_for_missing_template.feature:7
    Given a cookbook recipe that <template_type>    # features/033_check_for_missing_template.feature:8
    When I check the cookbook                       # features/033_check_for_missing_template.feature:9
    Then the missing template warning 033 <warning> # features/033_check_for_missing_template.feature:10

    Examples: 
      | template_type                                                             | warning                 |
      | defines a template where both the name and source are complex expressions | should not be displayed |
      | defines a template where name and source are both simple expressions      | should not be displayed |
      | defines a template where name is a complex expression                     | should not be displayed |
      | infers a template with an expression                                      | should not be displayed |
      | refers to a hidden template                                               | should not be displayed |
      | refers to a local template                                                | should not be displayed |
      | refers to a missing template                                              | should be displayed     |
      | refers to a template in a subdirectory                                    | should not be displayed |
      | refers to a template                                                      | should not be displayed |
      | refers to a template with an expression                                   | should not be displayed |
      | refers to a template without an erb extension                             | should not be displayed |
      | uses a missing inferred template                                          | should be displayed     |
      | uses an inferred template                                                 | should not be displayed |
      | uses a template from another cookbook                                     | should not be displayed |

  Scenario Outline: Template in the root of the templates directory                          # features/033_check_for_missing_template.feature:28
    Given a cookbook recipe that refers to a template in the root of the templates directory # features/033_check_for_missing_template.feature:29
    When I check the cookbook specifying <version> as the Chef version                       # features/033_check_for_missing_template.feature:30
    Then the missing template warning 033 <warning>                                          # features/033_check_for_missing_template.feature:31

    Examples: 
      | version  | warning                 |
      | 11.18.12 | should be displayed     |
      | 12.0.0   | should not be displayed |

  Scenario: Template within deploy resource                                            # features/033_check_for_missing_template.feature:37
    Given a cookbook recipe with a deploy resource that contains a template resource   # features/step_definitions/cookbook_steps.rb:132
    When I check the cookbook                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the missing template warning 033 should not be displayed against the template # features/step_definitions/cookbook_steps.rb:1810

Feature: Check for unused template variables
  In order to identify failure to parameterise template variables
  As a developer
  I want to identify variables passed to templates that are not used

  Scenario: All variables present in template                              # features/034_check_for_unused_template_variables.feature:7
    Given a cookbook template that uses all variables passed               # features/step_definitions/cookbook_steps.rb:721
    When I check the cookbook                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the unused template variables warning 034 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: No variables passed                                                         # features/034_check_for_unused_template_variables.feature:12
    Given a cookbook that passes no variables to a template                                     # features/034_check_for_unused_template_variables.feature:13
    And the template contains the expression <expression>                                       # features/034_check_for_unused_template_variables.feature:14
    When I check the cookbook                                                                   # features/034_check_for_unused_template_variables.feature:15
    Then the unused template variables warning 034 should not be displayed against the template # features/034_check_for_unused_template_variables.feature:16

    Examples: 
      | expression                  |
      | node[:configs][:config_var] |
      | @config_var                 |

  Scenario Outline: Variables passed                                                                         # features/034_check_for_unused_template_variables.feature:22
    Given a cookbook that passes variables <variables> to a template with extension <extension>              # features/034_check_for_unused_template_variables.feature:23
    And the template <extension> contains the expression <expression>                                        # features/034_check_for_unused_template_variables.feature:24
    When I check the cookbook                                                                                # features/034_check_for_unused_template_variables.feature:25
    Then the unused template variables warning 034 <displayed> be displayed against the template <extension> # features/034_check_for_unused_template_variables.feature:26

    Examples: 
      | variables              | expression                  | extension | displayed  |
      | config_var             | node[:configs][:config_var] | .conf.erb | should     |
      | config_var             | @config_var                 | .conf.erb | should not |
      | config_var             | @config_var['foo']          | .conf.erb | should not |
      | config_var             | node[:configs][:config_var] | .conf.erb | should     |
      | config_var,another_var | node[:configs][:config_var] | .conf.erb | should     |
      | config_var,another_var | @config_var                 | .conf.erb | should     |
      | config_var,another_var | @another_var                | .conf.erb | should     |
      | config_var             | @config_var                 | .conf     | should not |
      | config_var,another_var | @another_var                | .conf     | should     |

  Scenario Outline: Variables passed with includes                                                           # features/034_check_for_unused_template_variables.feature:39
    Given a cookbook that passes variables <variables> to a template with extension <extension>              # features/034_check_for_unused_template_variables.feature:40
    And the template <extension> contains partial includes of type <type> with the expression <expression>   # features/034_check_for_unused_template_variables.feature:41
    When I check the cookbook                                                                                # features/034_check_for_unused_template_variables.feature:42
    Then the unused template variables warning 034 <displayed> be displayed against the template <extension> # features/034_check_for_unused_template_variables.feature:43

    Examples: 
      | variables              | expression                  | type           | extension | displayed  |
      | config_var             | node[:configs][:config_var] | no parentheses | .conf.erb | should     |
      | config_var             | @config_var                 | no parentheses | .conf.erb | should not |
      | config_var             | @config_var['foo']          | no parentheses | .conf.erb | should not |
      | config_var             | node[:configs][:config_var] | no parentheses | .conf.erb | should     |
      | config_var,another_var | node[:configs][:config_var] | no parentheses | .conf.erb | should     |
      | config_var,another_var | @config_var                 | no parentheses | .conf.erb | should     |
      | config_var,another_var | @another_var                | no parentheses | .conf.erb | should     |
      | config_var             | @config_var                 | no parentheses | .conf     | should not |
      | config_var,another_var | @another_var                | no parentheses | .conf     | should     |
      | config_var             | node[:configs][:config_var] | parentheses    | .conf.erb | should     |
      | config_var             | @config_var                 | parentheses    | .conf.erb | should not |
      | config_var             | @config_var['foo']          | parentheses    | .conf.erb | should not |
      | config_var             | node[:configs][:config_var] | parentheses    | .conf.erb | should     |
      | config_var,another_var | node[:configs][:config_var] | parentheses    | .conf.erb | should     |
      | config_var,another_var | @config_var                 | parentheses    | .conf.erb | should     |
      | config_var,another_var | @another_var                | parentheses    | .conf.erb | should     |
      | config_var             | @config_var                 | parentheses    | .conf     | should not |
      | config_var,another_var | @another_var                | parentheses    | .conf     | should     |
      | config_var,another_var | @config_var,@another_var    | nested         | .conf     | should not |
      | config_var,another_var | @config_var                 | nested         | .conf     | should     |

  Scenario Outline: Template path is inferred                                                             # features/034_check_for_unused_template_variables.feature:67
    Given a cookbook that passes variables <variables> to an inferred template                            # features/034_check_for_unused_template_variables.feature:68
    And the inferred template contains the expression <expression>                                        # features/034_check_for_unused_template_variables.feature:69
    When I check the cookbook                                                                             # features/034_check_for_unused_template_variables.feature:70
    Then the unused template variables warning 034 <displayed> be displayed against the inferred template # features/034_check_for_unused_template_variables.feature:71

    Examples: 
      | variables  | expression                  | displayed  |
      | config_var | node[:configs][:config_var] | should     |
      | config_var | @config_var                 | should not |

  Scenario: Template includes contain cycle                                            # features/034_check_for_unused_template_variables.feature:77
    Given a template that includes a partial that includes the original template again # features/step_definitions/cookbook_steps.rb:1286
    When I check the cookbook                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the unused template variables warning 034 should not be displayed             # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for invalid notification actions
  In order to flag invalid notifications more quickly
  As a developer
  I want to identify notifications that have an action which is invalid for the notified resource

  Scenario Outline: Notification actions                                           # features/037_check_for_invalid_notification_action.feature:7
    Given a cookbook recipe with a resource that notifies a <resource> to <action> # features/037_check_for_invalid_notification_action.feature:8
    When I check the cookbook                                                      # features/037_check_for_invalid_notification_action.feature:9
    Then the invalid notification action warning 037 <display> be displayed        # features/037_check_for_invalid_notification_action.feature:10

    Examples: 
      | resource | action  | display    |
      | service  | restart | should not |
      | service  | nothing | should not |
      | service  | create  | should     |
      | execute  | run     | should not |
      | execute  | execute | should     |

  Scenario Outline: Subscription actions                                                                        # features/037_check_for_invalid_notification_action.feature:19
    Given a cookbook recipe with a <source> resource that subscribes to <action> when notified by a remote_file # features/037_check_for_invalid_notification_action.feature:20
    When I check the cookbook                                                                                   # features/037_check_for_invalid_notification_action.feature:21
    Then the invalid notification action warning 037 <display> be displayed                                     # features/037_check_for_invalid_notification_action.feature:22

    Examples: 
      | source  | action  | display    |
      | service | restart | should not |
      | service | nothing | should not |
      | service | create  | should     |
      | execute | run     | should not |
      | execute | execute | should     |

  Scenario: Notification action is an expression                                            # features/037_check_for_invalid_notification_action.feature:31
    Given a cookbook recipe with a resource that notifies where the action is an expression # features/step_definitions/cookbook_steps.rb:150
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid notification action warning 037 should not be displayed                # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for invalid resource actions
  In order to avoid failure at converge time
  As a developer
  I want to identify resources that have an invalid action

  Scenario: Resource with default action                                            # features/038_check_for_invalid_action.feature:7
    Given a cookbook recipe with a service resource that does not specify an action # features/step_definitions/cookbook_steps.rb:691
    When I check the cookbook                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid resource action warning 038 should not be displayed            # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Resource with variable action                                                   # features/038_check_for_invalid_action.feature:12
    Given a cookbook recipe with a service resource with an action specified via a variable # features/step_definitions/cookbook_steps.rb:699
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid resource action warning 038 should not be displayed                    # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Resource actions                                        # features/038_check_for_invalid_action.feature:17
    Given a cookbook recipe with a <resource> resource with action <action> # features/038_check_for_invalid_action.feature:18
    When I check the cookbook                                               # features/038_check_for_invalid_action.feature:19
    Then the invalid resource action warning 038 <display> be displayed     # features/038_check_for_invalid_action.feature:20

    Examples: 
      | resource | action  | display    |
      | service  | restart | should not |
      | service  | nothing | should not |
      | service  | none    | should     |
      | service  | create  | should     |
      | execute  | run     | should not |
      | execute  | go      | should     |
      | foo      | none    | should not |

  Scenario Outline: Multiple actions                                          # features/038_check_for_invalid_action.feature:31
    Given a cookbook recipe with a <resource> resource with actions <actions> # features/038_check_for_invalid_action.feature:32
    When I check the cookbook                                                 # features/038_check_for_invalid_action.feature:33
    Then the invalid resource action warning 038 <display> be displayed       # features/038_check_for_invalid_action.feature:34

    Examples: 
      | resource | actions              | display    |
      | service  | enable, start        | should not |
      | service  | enble, start         | should     |
      | foo      | energize, revitalize | should not |

  Scenario Outline: Try to lock an apt_package                         # features/038_check_for_invalid_action.feature:41
    Given a recipe that tries to lock an apt_package                   # features/038_check_for_invalid_action.feature:42
    When I check the cookbook specifying <version> as the Chef version # features/038_check_for_invalid_action.feature:43
    Then the invalid resource action warning 038 should be <shown>     # features/038_check_for_invalid_action.feature:44

    Examples: 
      | version  | shown |
      | 12.15.19 | true  |
      | 12.16.42 | false |

Feature: Check for key access to node methods
  In order to avoid failure at converge time
  As a developer
  I want to identify attempts to access node methods as attributes

  Scenario Outline: Resource actions                                                    # features/039_check_for_key_access_to_node_methods.feature:7
    Given a cookbook recipe that refers to <node_access>                                # features/039_check_for_key_access_to_node_methods.feature:8
    When I check the cookbook                                                           # features/039_check_for_key_access_to_node_methods.feature:9
    Then the node method cannot be accessed with key warning 039 <display> be displayed # features/039_check_for_key_access_to_node_methods.feature:10

    Examples: 
      | node_access              | display    |
      | node['foo']              | should not |
      | node[:foo]               | should not |
      | node.foo                 | should not |
      | node.chef_environment    | should not |
      | node[:chef_environment]  | should     |
      | node['chef_environment'] | should     |
      | node.run_state['foo']    | should not |
      | node.run_state[:foo]     | should not |
      | node.run_state.foo       | should not |
      | node['run_state']['foo'] | should     |
      | node[:run_state][:foo]   | should     |
      | node['foo']['run_state'] | should not |
      | node[:foo][:run_state]   | should not |
      | node['tags']             | should not |
      | node[:tags]              | should not |
      | node.tags                | should not |

  Scenario: Expressions that look like node access                                       # features/039_check_for_key_access_to_node_methods.feature:30
    Given a cookbook recipe that has a confusingly named local variable "default"        # features/step_definitions/cookbook_steps.rb:406
    When I check the cookbook                                                            # features/step_definitions/cookbook_steps.rb:1490
    Then the node method cannot be accessed with key warning 039 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for direct usage of git
  In order to access source control repositories idiomatically
  As a developer
  I want to use resources for repository access rather than executing git directly

  Scenario Outline: Execute resource                                                      # features/040_check_raw_git_usage.feature:7
    Given a cookbook recipe with an execute resource named <name>                         # features/040_check_raw_git_usage.feature:8
    When I check the cookbook                                                             # features/040_check_raw_git_usage.feature:9
    Then the execute resource used to run git commands warning 040 <display> be displayed # features/040_check_raw_git_usage.feature:10

    Examples: 
      | name                   | display    |
      | git pull               | should     |
      | git clone              | should     |
      | git fetch              | should     |
      | git checkout           | should     |
      | git reset --hard       | should     |
      | git show               | should not |
      | echo 'bob' && git show | should not |
      | which foo              | should not |

  Scenario Outline: Execute resource                                                      # features/040_check_raw_git_usage.feature:22
    Given a cookbook recipe with an execute resource that runs the command <command>      # features/040_check_raw_git_usage.feature:23
    When I check the cookbook                                                             # features/040_check_raw_git_usage.feature:24
    Then the execute resource used to run git commands warning 040 <display> be displayed # features/040_check_raw_git_usage.feature:25

    Examples: 
      | command                                             | display    |
      | git clone https://github.com/git/git.git            | should     |
      | git clone --depth 10 https://github.com/git/git.git | should     |
      | git pull                                            | should     |
      | git fetch origin                                    | should     |
      | git checkout master                                 | should     |
      | git reset --hard                                    | should     |
      | git status && git pull                              | should     |
      | git show                                            | should not |
      | echo 'bob' && git show                              | should not |
      | gitk                                                | should not |
      | curl http://github.com/                             | should not |

  Scenario: Multiple execute resources                                                                           # features/040_check_raw_git_usage.feature:40
    Given a cookbook recipe with multiple execute resources where the last uses git                              # features/step_definitions/cookbook_steps.rb:707
    When I check the cookbook                                                                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the execute resource used to run git commands warning 040 should be displayed against the last resource # features/step_definitions/cookbook_steps.rb:1651

Feature: Check for direct usage of curl or wget
  In order to fetch remote artifacts idiomatically
  As a developer
  I want to use resources to download rather than using curl or wget

  Scenario Outline: Execute resource                                                               # features/041_check_raw_download.feature:7
    Given a cookbook recipe with an execute resource named <name>                                  # features/041_check_raw_download.feature:8
    When I check the cookbook                                                                      # features/041_check_raw_download.feature:9
    Then the execute resource used to run curl or wget commands warning 041 <display> be displayed # features/041_check_raw_download.feature:10

    Examples: 
      | name                            | display    |
      | curl 'http://example.org/'      | should not |
      | wget 'http://example.org/'      | should     |
      | which curl                      | should not |
      | sudo wget 'http://example.org/' | should     |
      | reboot                          | should not |

  Scenario Outline: Execute resource                                                               # features/041_check_raw_download.feature:19
    Given a cookbook recipe with an execute resource that runs the command <command>               # features/041_check_raw_download.feature:20
    When I check the cookbook                                                                      # features/041_check_raw_download.feature:21
    Then the execute resource used to run curl or wget commands warning 041 <display> be displayed # features/041_check_raw_download.feature:22

    Examples: 
      | command                                    | display    |
      | which curl                                 | should not |
      | sudo wget 'http://example.org/'            | should     |
      | curl -X POST 'http://example.org/'         | should not |
      | curl 'http://example.org/'                 | should not |
      | curl 'http://example.org/' -o foo          | should     |
      | curl 'http://example.org/'  --output   foo | should     |
      | curl 'http://example.org/' &>bar           | should     |
      | curl -o baz 'http://example.org/'>   bing  | should     |
      | wget 'http://example.org/'                 | should     |
      | mkdir foo && wget 'http://example.org/'    | should     |

Feature: Check for old notification style
  In order to be able to notify a resource that has not yet been declared
  As a developer
  I want to use the new-style notification syntax

  Scenario: No notification                                                     # features/043_check_for_old_notification_style.feature:7
    Given a cookbook recipe with no notifications                               # features/step_definitions/cookbook_steps.rb:258
    When I check the cookbook                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer new notification syntax warning 043 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: New-style notification                                              # features/043_check_for_old_notification_style.feature:12
    Given a cookbook recipe with a resource that notifies a service to restart  # features/step_definitions/cookbook_steps.rb:641
    When I check the cookbook                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer new notification syntax warning 043 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Old-style notification                                                # features/043_check_for_old_notification_style.feature:17
    Given a cookbook recipe with a resource that uses the old notification syntax # features/step_definitions/cookbook_steps.rb:653
    When I check the cookbook                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer new notification syntax warning 043 should be displayed       # features/step_definitions/cookbook_steps.rb:1728

  Scenario Outline: Applicability by Chef version                                 # features/043_check_for_old_notification_style.feature:22
    Given a cookbook recipe with a resource that uses the old notification syntax # features/043_check_for_old_notification_style.feature:23
    When I check the cookbook specifying <version> as the Chef version            # features/043_check_for_old_notification_style.feature:24
    Then the prefer new notification syntax warning 043 <displayed> be displayed  # features/043_check_for_old_notification_style.feature:25

    Examples: 
      | version | displayed |
      | 11.4.0  | should    |

Feature: Check for bare attribute keys
  In order to ensure my cookbook attributes are easily understood
  As a developer
  I want to avoid referring to bare attributes

  Scenario Outline: Cookbook attributes                                                              # features/044_check_for_bare_attribute_keys.feature:7
    Given a cookbook attributes file that refers to an attribute with <reference>                    # features/044_check_for_bare_attribute_keys.feature:8
    When I check the cookbook                                                                        # features/044_check_for_bare_attribute_keys.feature:9
    Then the bare attribute keys warning 044 <show_warning> be displayed against the attributes file # features/044_check_for_bare_attribute_keys.feature:10

    Examples: 
      | reference        | show_warning |
      | node['hostname'] | should not   |
      | node[:hostname]  | should not   |
      | node.hostname    | should not   |
      | hostname         | should       |
      | true             | should not   |
      | false            | should not   |
      | nil              | should not   |

  Scenario: Cookbook recipe                                                 # features/044_check_for_bare_attribute_keys.feature:21
    Given a cookbook recipe that refers to an attribute with a bare keyword # features/step_definitions/cookbook_steps.rb:187
    When I check the cookbook                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the bare attribute keys warning 044 should not be displayed        # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Variable declared in attributes file                                                # features/044_check_for_bare_attribute_keys.feature:26
    Given a cookbook attributes file that declares and refers to a local variable               # features/step_definitions/cookbook_steps.rb:1
    When I check the cookbook                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the bare attribute keys warning 044 should not be displayed against the local variable # features/step_definitions/cookbook_steps.rb:1643

  Scenario Outline: Block variable                                                                  # features/044_check_for_bare_attribute_keys.feature:31
    Given a cookbook attributes file with a <block_type> block that takes arguments                 # features/044_check_for_bare_attribute_keys.feature:32
    When I check the cookbook                                                                       # features/044_check_for_bare_attribute_keys.feature:33
    Then the bare attribute keys warning 044 should not be displayed against the <block_type> block # features/044_check_for_bare_attribute_keys.feature:34

    Examples: 
      | block_type |
      | do         |
      | brace      |

  Scenario: Attribute set to library method call                                               # features/044_check_for_bare_attribute_keys.feature:40
    Given a cookbook attributes file that sets an attribute to be the result of a library call # features/step_definitions/cookbook_steps.rb:14
    When I check the cookbook                                                                  # features/step_definitions/cookbook_steps.rb:1490
    Then the bare attribute keys warning 044 should not be displayed against the library call  # features/step_definitions/cookbook_steps.rb:1643

  Scenario: Attribute chain with new line                                                       # features/044_check_for_bare_attribute_keys.feature:45
    Given a cookbook attributes file that sets an attribute to have line break                  # features/step_definitions/cookbook_steps.rb:37
    When I check the cookbook                                                                   # features/step_definitions/cookbook_steps.rb:1490
    Then the bare attribute keys warning 044 should not be displayed against the local variable # features/step_definitions/cookbook_steps.rb:1643

  Scenario: Attribute chain with new line and parameterized name                             # features/044_check_for_bare_attribute_keys.feature:50
    Given a cookbook attributes file that sets an attribute to have line break and arguments # features/step_definitions/cookbook_steps.rb:44
    When I check the cookbook                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the bare attribute keys warning 044 should not be displayed against the new line    # features/step_definitions/cookbook_steps.rb:1647

Feature: Check for attributes using assign unless nil
  In order to avoid attributes being assigned unexpected values
  As a developer
  I want to identify attributes that attempt to use assign unless nil (||=)

  Scenario Outline: Attribute assignments                                                                                    # features/046_check_for_assign_unless_nil_attributes.feature:7
    Given a cookbook attributes file with assignment <assignment>                                                            # features/046_check_for_assign_unless_nil_attributes.feature:8
    When I check the cookbook                                                                                                # features/046_check_for_assign_unless_nil_attributes.feature:9
    Then the attribute assignment uses assign unless nil warning 046 <show_warning> be displayed against the attributes file # features/046_check_for_assign_unless_nil_attributes.feature:10

    Examples: 
      | assignment                          | show_warning |
      | default['somevalue'] = []           | should not   |
      | default['somevalue'] = foo \|\| bar | should not   |
      | default['somevalue'] \|\|= []       | should       |
      | default[:somevalue] = []            | should not   |
      | default[:somevalue] = foo \|\| bar  | should not   |
      | default[:somevalue] \|\|= []        | should       |
      | default.somevalue = []              | should not   |
      | default.somevalue = foo \|\| bar    | should not   |
      | default.somevalue \|\|= []          | should       |

Feature: Check for attribute assignment without specified precedence
  In order to ensure that my cookbooks continue to work with Chef 11+
  As a developer
  I want to identify node attribute assignment that does not specify the attribute precedence

  Scenario Outline: Attribute assignment                                                                                 # features/047_check_for_attribute_assignment_without_precedence.feature:7
    Given a cookbook attributes file with assignment <assignment>                                                        # features/047_check_for_attribute_assignment_without_precedence.feature:8
    When I check the cookbook                                                                                            # features/047_check_for_attribute_assignment_without_precedence.feature:9
    Then the attribute assignment without precedence warning 047 <show_warning> be displayed against the attributes file # features/047_check_for_attribute_assignment_without_precedence.feature:10

    Examples: 
      | assignment                          | show_warning |
      | node[:foo] = 'bar'                  | should       |
      | node['foo'] = 'bar'                 | should       |
      | node['foo'] = a_var                 | should       |
      | a_var = node['foo']                 | should not   |
      | node['foo']['bar'] = 'baz'          | should       |
      | node['foo']['bar']['baz'] = 'fizz'  | should       |
      | node.foo = 'bar'                    | should       |
      | node.normal.foo = 'bar'             | should not   |
      | node.normal['foo'] = 'bar'          | should not   |
      | node.default['foo'] = 'bar'         | should not   |
      | node.force_default['foo'] = 'bar'   | should not   |
      | node.default!['foo'] = 'bar'        | should not   |
      | node.set['foo'] = 'bar'             | should not   |
      | node.override['foo'] = 'bar'        | should not   |
      | node.override!['foo'] = 'bar'       | should not   |
      | node.force_override['foo'] = 'bar'  | should not   |
      | node.automatic_attrs['foo'] = 'bar' | should not   |
      | node['foos'] << 'bar'               | should       |
      | node['foo']['bars'] << 'baz'        | should       |
      | foo = node['bar']                   | should not   |
      | baz << node['foo']['bars']          | should not   |
      | node.run_state['foo'] = bar         | should not   |
      | foo[:bar] << node['baz']            | should not   |
      | node.default['foo'] << bar          | should not   |
      | node.default_unless['foo'] = 'bar'  | should not   |
      | node.normal_unless['foo'] = 'bar'   | should not   |
      | node.set_unless['foo'] = 'bar'      | should not   |
      | node.override_unless['foo'] = 'bar' | should not   |

  Scenario Outline: Attribute assignment in recipe                                           # features/047_check_for_attribute_assignment_without_precedence.feature:42
    Given a cookbook recipe file with assignment <assignment>                                # features/047_check_for_attribute_assignment_without_precedence.feature:43
    When I check the cookbook                                                                # features/047_check_for_attribute_assignment_without_precedence.feature:44
    Then the attribute assignment without precedence warning 047 <show_warning> be displayed # features/047_check_for_attribute_assignment_without_precedence.feature:45

    Examples: 
      | assignment                 | show_warning |
      | node[:foo] = 'bar'         | should       |
      | node.normal['foo'] = 'bar' | should not   |

Feature: Check for spawning without Mixlib::ShellOut
  In order to work more easily with spawned processes
  As a developer
  I want to use the Mixlib::ShellOut library rather than basic ruby constructs

  Scenario Outline: Spawning a sub-process                                  # features/048_check_for_shellout.feature:7
    Given a cookbook recipe that spawns a sub-process with <command>        # features/048_check_for_shellout.feature:8
    When I check the cookbook                                               # features/048_check_for_shellout.feature:9
    Then the prefer mixlib shellout warning 048 <show_warning> be displayed # features/048_check_for_shellout.feature:10

    Examples: 
      | command                                | show_warning |
      | `ls`                                   | should       |
      | `#{cmd}`                               | should       |
      | %x{ls}                                 | should       |
      | %x[ls]                                 | should       |
      | %x{#{cmd} some_dir}                    | should       |
      | %x{#{cmd} some_dir}                    | should       |
      | system "ls"                            | should       |
      | system("ls")                           | should       |
      | system cmd                             | should       |
      | system(cmd)                            | should       |
      | system("#{cmd} some_dir")              | should       |
      | Mixlib::ShellOut.new('ls').run_command | should not   |

  Scenario: Execute resource                                            # features/048_check_for_shellout.feature:26
    Given a cookbook recipe that executes 'ls' with an execute resource # features/step_definitions/cookbook_steps.rb:108
    When I check the cookbook                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer mixlib shellout warning 048 should not be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Group resource                                                                         # features/048_check_for_shellout.feature:31
    Given a cookbook recipe that contains a group resource that uses the 'system' bool attribute   # features/step_definitions/cookbook_steps.rb:61
    When I check the cookbook                                                                      # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer mixlib shellout warning 048 should not be displayed against the group resource # features/step_definitions/cookbook_steps.rb:1670

  Scenario: User resource                                                                         # features/048_check_for_shellout.feature:36
    Given a cookbook recipe that contains a user resource that uses the 'system' string attribute # features/step_definitions/cookbook_steps.rb:69
    When I check the cookbook                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer mixlib shellout warning 048 should not be displayed against the user resource # features/step_definitions/cookbook_steps.rb:1674

  Scenario: Ruby block                                                                              # features/048_check_for_shellout.feature:41
    Given a provider that contains a ruby_block resource that spawns a sub-process with system      # features/step_definitions/cookbook_steps.rb:120
    When I check the cookbook                                                                       # features/step_definitions/cookbook_steps.rb:1490
    Then the prefer mixlib shellout warning 048 should be displayed against the ruby_block resource # features/step_definitions/cookbook_steps.rb:1678

Feature: Check for template partial includes cycle
  In order to avoid failures at converge time
  As a developer
  I want to identify when a template uses partials that would loop

  Scenario: Template without includes                                                                      # features/051_check_for_template_partial_loops.feature:7
    Given a cookbook recipe that refers to a template                                                      # features/step_definitions/cookbook_steps.rb:437
    When I check the cookbook                                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the template partials loop indefinitely warning 051 should not be displayed against the templates # features/step_definitions/cookbook_steps.rb:1850

  Scenario: Template includes do not cycle                                                                 # features/051_check_for_template_partial_loops.feature:12
    Given a template that includes a partial                                                               # features/step_definitions/cookbook_steps.rb:1286
    When I check the cookbook                                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the template partials loop indefinitely warning 051 should not be displayed against the templates # features/step_definitions/cookbook_steps.rb:1850

  Scenario: Template includes contain cycle                                                            # features/051_check_for_template_partial_loops.feature:17
    Given a template that includes a partial that includes the original template again                 # features/step_definitions/cookbook_steps.rb:1286
    When I check the cookbook                                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the template partials loop indefinitely warning 051 should be displayed against the templates # features/step_definitions/cookbook_steps.rb:1850

  Scenario: Relative partial                                                                               # features/051_check_for_template_partial_loops.feature:22
    Given a template that includes a partial with a relative subdirectory path                             # features/step_definitions/cookbook_steps.rb:1304
    When I check the cookbook                                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the template partials loop indefinitely warning 051 should not be displayed against the templates # features/step_definitions/cookbook_steps.rb:1850

  Scenario: Missing partial                                                                                # features/051_check_for_template_partial_loops.feature:27
    Given a template that includes a missing partial with a relative subdirectory path                     # features/step_definitions/cookbook_steps.rb:1304
    When I check the cookbook                                                                              # features/step_definitions/cookbook_steps.rb:1490
    Then the template partials loop indefinitely warning 051 should not be displayed against the templates # features/step_definitions/cookbook_steps.rb:1850

  Scenario Outline: Template directory contains binary files                                               # features/051_check_for_template_partial_loops.feature:32
    Given a template directory that contains a binary file <file> that is not valid UTF-8                  # features/051_check_for_template_partial_loops.feature:33
    When I check the cookbook                                                                              # features/051_check_for_template_partial_loops.feature:34
    Then the template partials loop indefinitely warning 051 should not be displayed against the templates # features/051_check_for_template_partial_loops.feature:35

    Examples: 
      | file        |
      | .DS_Store   |
      | foo.erb.swp |

Feature: Check for library providers that do not declare use_inline_resources
  In order to ensure that notifications happen correctly
  As a cookbook provider author
  I want to always use_inline_resources

  Scenario: Library provider with use_inline_resources                                                                    # features/057_check_for_library_provider_without_use_inline_resources.feature:7
    Given a cookbook that contains a library provider with use_inline_resources                                           # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                             # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources warning 057 should not be displayed against the libraries file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Library provider without use_inline_resources                                                                        # features/057_check_for_library_provider_without_use_inline_resources.feature:12
    Given a cookbook that contains a library provider without use_inline_resources                                               # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                                    # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources warning 057 should be displayed against the libraries file on line 11 # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Library file without use_inline_resources                                                                     # features/057_check_for_library_provider_without_use_inline_resources.feature:17
    Given a cookbook that contains a library resource                                                                     # features/step_definitions/cookbook_steps.rb:1980
    When I check the cookbook                                                                                             # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources warning 057 should not be displayed against the libraries file # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for library providers that declare use_inline_resources and declare action_<name> methods
  In order to ensure that notifications happen correctly
  As a cookbook provider author
  I want to always use_inline_resources

  Scenario: Library provider with use_inline_resources and bad action_create                                                                           # features/058_check_for_library_provider_bad_action_methods.feature:7
    Given a cookbook that contains a library provider with use_inline_resources and uses def action_create                                             # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                                                          # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources and bad action_create warning 058 should be displayed against the libraries file on line 11 # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Library provider without use_inline_resources and (okay) action_create                                                                          # features/058_check_for_library_provider_bad_action_methods.feature:12
    Given a cookbook that contains a library provider without use_inline_resources and uses def action_create                                               # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources and bad action_create warning 058 should not be displayed against the libraries file on any line # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Library provider without use_inline_resources                                                                                                   # features/058_check_for_library_provider_bad_action_methods.feature:17
    Given a cookbook that contains a library provider without use_inline_resources                                                                          # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources and bad action_create warning 058 should not be displayed against the libraries file on any line # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Library provider with use_inline_resources                                                                                                      # features/058_check_for_library_provider_bad_action_methods.feature:22
    Given a cookbook that contains a library provider with use_inline_resources                                                                             # features/step_definitions/cookbook_steps.rb:1942
    When I check the cookbook                                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the library provider without use_inline_resources and bad action_create warning 058 should not be displayed against the libraries file on any line # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for LWRP providers that do not declare use_inline_resources
  In order to ensure that notifications happen correctly
  As a cookbook provider author
  I want to always use_inline_resources

  Scenario: LWRP provider with use_inline_resources                                                                   # features/059_check_for_lwrp_provider_without_use_inline_resources.feature:7
    Given a cookbook that contains a LWRP provider with use_inline_resources                                          # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                         # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources warning 059 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP provider without use_inline_resources                                                            # features/059_check_for_lwrp_provider_without_use_inline_resources.feature:12
    Given a cookbook that contains a LWRP provider without use_inline_resources                                   # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources warning 059 should be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

Feature: Check for LWRP providers that declare use_inline_resources and declare action_<name> methods
  In order to ensure that notifications happen correctly
  As a cookbook provider author
  I want to always use_inline_resources

  Scenario: LWRP provider with use_inline_resources and bad action_create                                                                         # features/060_check_for_lwrp_provider_bad_action_methods.feature:7
    Given a cookbook that contains a LWRP provider with use_inline_resources and uses def action_create                                           # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources and bad action_create warning 060 should be displayed against the provider file on line 3 # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP provider without use_inline_resources                                                                                      # features/060_check_for_lwrp_provider_bad_action_methods.feature:12
    Given a cookbook that contains a LWRP provider without use_inline_resources                                                             # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources and bad action_create warning 060 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP provider without use_inline_resources and (okay) action_create                                                             # features/060_check_for_lwrp_provider_bad_action_methods.feature:17
    Given a cookbook that contains a LWRP provider without use_inline_resources and uses def action_create                                  # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources and bad action_create warning 060 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: LWRP provider with use_inline_resources                                                                                         # features/060_check_for_lwrp_provider_bad_action_methods.feature:22
    Given a cookbook that contains a LWRP provider with use_inline_resources                                                                # features/step_definitions/cookbook_steps.rb:1915
    When I check the cookbook                                                                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the LWRP provider without use_inline_resources and bad action_create warning 060 should not be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

Feature: Checking all types of files
In order to run foodcritic rules
As a developer
I want to be able to check all types of files

  Scenario: Checking recipe                                       # features/checking_all_types_of_file.feature:7
    Given a cookbook with a recipe file with an interpolated name # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking attribute                                                                # features/checking_all_types_of_file.feature:12
    Given a cookbook with an attribute file with an interpolated name                         # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the attributes file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking metadata                                                               # features/checking_all_types_of_file.feature:17
    Given a cookbook with a metadata file with an interpolated name                         # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the metadata file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking provider                                                               # features/checking_all_types_of_file.feature:22
    Given a cookbook with a provider file with an interpolated name                         # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the provider file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking resource                                                               # features/checking_all_types_of_file.feature:27
    Given a cookbook with a resource file with an interpolated name                         # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                               # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the resource file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking library                                                                 # features/checking_all_types_of_file.feature:32
    Given a cookbook with a library file with an interpolated name                           # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                                # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the libraries file # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Checking definition                                                               # features/checking_all_types_of_file.feature:37
    Given a cookbook with a definition file with an interpolated name                         # features/step_definitions/cookbook_steps.rb:1902
    When I check the cookbook                                                                 # features/step_definitions/cookbook_steps.rb:1490
    Then the string interpolation warning 002 should be displayed against the definition file # features/step_definitions/cookbook_steps.rb:1728

Feature: Choose rules to apply
  In order to remove warnings that are not appropriate for my usage of Chef
  As a developer
  I want to be able to filter the rules applied based on tags associated with each rule

  Scenario Outline: Specified tags on command line            # features/choose_rules_to_apply.feature:7
    Given a cookbook that matches rules <cookbook_matches>    # features/choose_rules_to_apply.feature:8
    When I check the cookbook specifying tags <tag_arguments> # features/choose_rules_to_apply.feature:9
    Then the warnings shown should be <warnings_shown>        # features/choose_rules_to_apply.feature:10

    Examples: 
      | cookbook_matches  | tag_arguments                      | warnings_shown    |
      | FC002,FC004,FC005 |                                    | FC002,FC004,FC005 |
      | FC002             | -t FC002                           | FC002             |
      | FC002,FC004,FC005 | --tags FC002                       | FC002             |
      | FC002,FC004,FC005 | --tags fc002                       |                   |
      | FC002,FC004,FC005 | --tags FC006                       |                   |
      | FC002,FC004,FC005 | --tags ~FC002                      | FC004,FC005       |
      |                   | --tags FC002                       |                   |
      | FC002,FC004,FC005 | --tags @FC002                      |                   |
      | FC002,FC004,FC005 | --tags style                       | FC002             |
      | FC002,FC004,FC005 | --tags FC002 --tags FC004          |                   |
      | FC002,FC004,FC005 | --tags portability --tags services | FC004             |
      | FC002,FC004,FC005 | --tags style,services,portability  | FC002,FC004       |

  Scenario Outline: Specified tags in cookbook .foodcritic file                   # features/choose_rules_to_apply.feature:27
    Given a cookbook that matches rules <cookbook_matches>                        # features/choose_rules_to_apply.feature:28
    When the cookbook directory has a .foodcritic file specifying tags <tag_file> # features/choose_rules_to_apply.feature:29
    And I check the cookbook specifying tags <tag_arguments>                      # features/choose_rules_to_apply.feature:30
    Then the warnings shown should be <warnings_shown>                            # features/choose_rules_to_apply.feature:31

    Examples: 
      | cookbook_matches | tag_file          | tag_arguments | warnings_shown |
      | FC002,FC004      |                   |               | FC002,FC004    |
      | FC002            | FC002             |               | FC002          |
      | FC002            | ~FC002            | --tags FC002  | FC002          |
      | FC002            | fc002             |               |                |
      | FC002,FC004      | FC005             |               |                |
      | FC002,FC004      | FC005             | -t FC002      | FC002          |
      | FC002,FC004      | ~FC002            |               | FC004          |
      | FC002,FC004      | ~FC002            | -t FC002      | FC002          |
      |                  | FC002             |               |                |
      | FC002,FC004      | @FC002            |               |                |
      | FC002,FC004      | style             |               | FC002          |
      | FC002,FC004      | FC002             |               |                |
      | FC002,FC004      | style,portability |               | FC002,FC004    |

Feature: Command line help
  In order to be able to learn about the options available for checking my cookbooks
  As a developer
  I want to be able to interactively get help on the options from the command line

  Scenario: No arguments                                                           # features/command_line_help.feature:7
    Given I have installed the lint tool                                           # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with no arguments                            # features/step_definitions/cookbook_steps.rb:1602
    Then the simple usage text should be displayed along with a non-zero exit code # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Non-existent cookbook directory                                        # features/command_line_help.feature:12
    Given I have installed the lint tool                                           # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line specifying a cookbook that does not exist    # features/step_definitions/cookbook_steps.rb:1590
    Then the simple usage text should be displayed along with a non-zero exit code # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Non-existent role directory                                               # features/command_line_help.feature:17
    Given I have installed the lint tool                                              # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line specifying a role directory that does not exist # features/step_definitions/cookbook_steps.rb:1594
    Then the simple usage text should be displayed along with a non-zero exit code    # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Non-existent environment directory                                                # features/command_line_help.feature:22
    Given I have installed the lint tool                                                      # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line specifying an environment directory that does not exist # features/step_definitions/cookbook_steps.rb:1594
    Then the simple usage text should be displayed along with a non-zero exit code            # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Command help                                                       # features/command_line_help.feature:27
    Given I have installed the lint tool                                       # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the help option                     # features/step_definitions/cookbook_steps.rb:1606
    Then the simple usage text should be displayed along with a zero exit code # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Display version                                   # features/command_line_help.feature:32
    Given I have installed the lint tool                      # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the version option # features/step_definitions/cookbook_steps.rb:1606
    Then the current version should be displayed              # features/step_definitions/cookbook_steps.rb:1771

  Scenario: Future verbose option                                                  # features/command_line_help.feature:37
    Given I have installed the lint tool                                           # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the unimplemented verbose option        # features/step_definitions/cookbook_steps.rb:1606
    Then the simple usage text should be displayed along with a non-zero exit code # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Unimplemented option                                                   # features/command_line_help.feature:42
    Given I have installed the lint tool                                           # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the unimplemented -Z option             # features/step_definitions/cookbook_steps.rb:1606
    Then the simple usage text should be displayed along with a non-zero exit code # features/step_definitions/cookbook_steps.rb:1846

  Scenario: Future verbose option plus arguments                                        # features/command_line_help.feature:47
    Given a cookbook that has style problems                                            # features/step_definitions/cookbook_steps.rb:890
    And I have installed the lint tool                                                  # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the unimplemented -v option with an argument # features/step_definitions/cookbook_steps.rb:1606
    Then the simple usage text should be displayed along with a non-zero exit code      # features/step_definitions/cookbook_steps.rb:1846
    Then the style warning 002 should not be displayed                                  # features/step_definitions/cookbook_steps.rb:1728
    And the current version should not be displayed                                     # features/step_definitions/cookbook_steps.rb:1771

  Scenario: Refer to the man page                                 # features/command_line_help.feature:55
    Given access to the man page documentation                    # features/step_definitions/cookbook_steps.rb:1319
    When I compare the man page options against the usage options # features/step_definitions/cookbook_steps.rb:1547
    Then all options should be documented in the man page         # features/step_definitions/cookbook_steps.rb:1625

Feature: Continuous Integration Support
  In order to be able to quickly identify problems with my cookbooks
  As a developer
  I want to be able to fail the build for a subset of warnings

  Scenario: Command help                                                                      # features/continuous_integration_support.feature:7
    Given I have installed the lint tool                                                      # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line with the help option                                    # features/step_definitions/cookbook_steps.rb:1606
    Then the usage text should include an option for specifying tags that will fail the build # features/step_definitions/cookbook_steps.rb:1879

  Scenario Outline: Fail the build for certain tags           # features/continuous_integration_support.feature:12
    Given a cookbook that matches rules <cookbook_matches>    # features/continuous_integration_support.feature:13
    When I check the cookbook specifying tags <tag_arguments> # features/continuous_integration_support.feature:14
    Then the warnings shown should be <warnings_shown>        # features/continuous_integration_support.feature:15
    And the build status should be <build_status>             # features/continuous_integration_support.feature:16

    Examples: 
      | cookbook_matches | tag_arguments                 | warnings_shown | build_status |
      | FC002,FC004      |                               | FC002,FC004    | failed       |
      | FC002,FC004      | -t style                      | FC002          | failed       |
      | FC002,FC004      | -t style -f ~any              | FC002          | successful   |
      | FC002,FC004      | -f FC005                      | FC002,FC004    | successful   |
      | FC002,FC004      | -f FC004                      | FC002,FC004    | failed       |
      | FC002,FC004      | --epic-fail FC002             | FC002,FC004    | failed       |
      | FC002,FC005      | -f ~any                       | FC002,FC005    | successful   |
      | FC002,FC005      | -f any -f ~FC014              | FC002,FC005    | failed       |
      | FC002,FC005      | -f any,~FC014                 | FC002,FC005    | failed       |
      | FC002            | -f ~FC002 -f ~metadata        | FC002          | failed       |
      | FC002,FC005      | -f ~FC002                     | FC002,FC005    | failed       |
      | FC002,FC005      | -f any -f ~FC002              | FC002,FC005    | failed       |
      | FC002            | -f any,~FC002                 | FC002          | failed       |
      | FC002            | -f any -f ~FC002 -f ~metadata | FC002          | failed       |
      | FC002,FC005      | -f any,~FC002                 | FC002,FC005    | failed       |
      | FC002,FC005      | -f ~FC002 -f ~FC004           | FC002,FC005    | failed       |

Feature: Exclude paths from being linted
  In order to avoid linting some paths that are not really from the cookbook
  As a developer
  I want to be able to exclude some files or directories from the passed paths

  Scenario: Exclude a non cookbook directory               # features/exclude_paths_to_lint.feature:7
    Given a cookbook that has style problems               # features/step_definitions/cookbook_steps.rb:890
    And unit tests under a top-level test directory        # features/step_definitions/cookbook_steps.rb:1396
    When I check the cookbook excluding the test directory # features/step_definitions/cookbook_steps.rb:1538
    Then no warnings will be displayed against the tests   # features/step_definitions/cookbook_steps.rb:1707
    And the style warning 002 should be displayed          # features/step_definitions/cookbook_steps.rb:1728

Feature: Ignoring rules on per line basis
  To ignore specific warnings on some lines
  As a developer
  I want to add an ignore comment

  Scenario Outline: Ignoring                                                # features/ignore_via_line_comments.feature:7
    Given a file resource declared with the mode 644 with comment <comment> # features/ignore_via_line_comments.feature:8
    When I check the cookbook                                               # features/ignore_via_line_comments.feature:9
    Then the warning 006 should <shown>                                     # features/ignore_via_line_comments.feature:10

    Examples: 
      | comment                      | shown        |
      |                              | be shown     |
      | #                            | be shown     |
      | # foo bar baz                | be shown     |
      | # ~FC006                     | not be shown |
      | # ~FC006 is a false positive | not be shown |
      | #~FC006                      | not be shown |
      | #~FC022                      | be shown     |
      | #       ~FC006               | not be shown |
      | # ~FC006,~FC009              | not be shown |
      | # ~FC006 ~FC009              | not be shown |
      | # ~FC006,  ~FC009            | not be shown |
      | # ~FC009                     | be shown     |
      | # FC006                      | be shown     |
      | # ~ FC006                    | be shown     |
      | # fc006                      | be shown     |
      | # ~006                       | be shown     |
      | # ~style                     | be shown     |
      | # ~files                     | not be shown |

  Scenario Outline: Ignoring cookbook level rules                                    # features/ignore_via_line_comments.feature:32
    Given a cookbook with a single recipe that triggers FC019 with comment <comment> # features/ignore_via_line_comments.feature:33
    And metadata                                                                     # features/ignore_via_line_comments.feature:34
    When I check the cookbook                                                        # features/ignore_via_line_comments.feature:35
    Then the attribute consistency warning 019 should <shown>                        # features/ignore_via_line_comments.feature:36

    Examples: 
      | comment | shown        |
      |         | be shown     |
      | #~FC019 | be not shown |

  Scenario Outline: Multiple warnings                                    # features/ignore_via_line_comments.feature:42
    Given a file with multiple errors on one line with comment <comment> # features/ignore_via_line_comments.feature:43
    When I check the cookbook                                            # features/ignore_via_line_comments.feature:44
    Then the warnings shown should be <warnings>                         # features/ignore_via_line_comments.feature:45

    Examples: 
      | comment         | warnings    |
      |                 | FC002,FC039 |
      | # ~FC002,~FC007 | FC002       |
      | # ~FC002,~FC039 |             |
      | # ~FC002        | FC039       |

  Scenario Outline: Ignoring role rules                                    # features/ignore_via_line_comments.feature:53
    Given a ruby role that triggers FC049 with comment <comment>           # features/ignore_via_line_comments.feature:54
    When I check the role directory                                        # features/ignore_via_line_comments.feature:55
    Then the role name does not match file name warning 049 should <shown> # features/ignore_via_line_comments.feature:56

    Examples: 
      | comment | shown        |
      |         | be shown     |
      | #~FC049 | not be shown |

  Scenario Outline: Ignoring environment rules                          # features/ignore_via_line_comments.feature:62
    Given a ruby environment that triggers FC050 with comment <comment> # features/ignore_via_line_comments.feature:63
    When I check the environment directory                              # features/ignore_via_line_comments.feature:64
    Then the invalid environment name warning 050 should <shown>        # features/ignore_via_line_comments.feature:65

    Examples: 
      | comment | shown        |
      |         | be shown     |
      | #~FC050 | not be shown |

Feature: Include custom rules
  In order to be able detect cookbook issues that are specific to my organisation
  As a developer
  I want to be able to write custom rules and include them in my check

  Scenario: Valid custom rule                                                                     # features/include_custom_rules.feature:7
    Given a cookbook with a single recipe that reads node attributes via strings                  # features/step_definitions/cookbook_steps.rb:1003
    And I have installed the lint tool                                                            # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line including a custom rule file containing a rule that matches # features/step_definitions/cookbook_steps.rb:1563
    Then a warning for the custom rule should be displayed                                        # features/step_definitions/cookbook_steps.rb:1621

  Scenario: Valid custom rules (directory)                                                             # features/include_custom_rules.feature:13
    Given a cookbook with a single recipe that reads node attributes via strings                       # features/step_definitions/cookbook_steps.rb:1003
    And I have installed the lint tool                                                                 # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line including a custom rule directory containing a rule that matches # features/step_definitions/cookbook_steps.rb:1563
    Then a warning for the custom rule should be displayed                                             # features/step_definitions/cookbook_steps.rb:1621

  Scenario: Missing file                                                         # features/include_custom_rules.feature:19
    Given a cookbook with a single recipe that reads node attributes via strings # features/step_definitions/cookbook_steps.rb:1003
    And I have installed the lint tool                                           # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line including a missing custom rule file       # features/step_definitions/cookbook_steps.rb:1584
    Then a 'No such file or directory' error should be displayed                 # features/step_definitions/cookbook_steps.rb:1629

  Scenario: Non-ruby file                                                               # features/include_custom_rules.feature:25
    Given a cookbook with a single recipe that reads node attributes via strings        # features/step_definitions/cookbook_steps.rb:1003
    And I have installed the lint tool                                                  # features/step_definitions/cookbook_steps.rb:1323
    When I run it on the command line including a file which does not contain Ruby code # features/step_definitions/cookbook_steps.rb:1577
    Then an 'undefined method' error should be displayed                                # features/step_definitions/cookbook_steps.rb:1629

Feature: Individual file
  In order to get even faster feedback on changes to cookbooks
  As a developer
  I want to lint individual files in a cookbook

  Scenario: Linting an individual recipe shows warnings only from that file              # features/individual_file.feature:7
    Given a cookbook with a single recipe that reads node attributes via symbols,strings # features/step_definitions/cookbook_steps.rb:1003
    And a cookbook that declares normal attributes via symbols                           # features/step_definitions/cookbook_steps.rb:879
    When I check the recipe                                                              # features/step_definitions/cookbook_steps.rb:1543
    Then the attribute consistency warning 019 should be displayed for the recipe        # features/step_definitions/cookbook_steps.rb:1715
    And the attribute consistency warning 019 should not be displayed for the attributes # features/step_definitions/cookbook_steps.rb:1719

  Scenario: Linting an individual role                                                                   # features/individual_file.feature:14
    Given a roles directory                                                                              # features/step_definitions/cookbook_steps.rb:1101
    And it contains a role file webserver.rb that defines the role name "apache"                         # features/step_definitions/cookbook_steps.rb:1448
    And it contains a role file database.rb that defines the role name "postgresql"                      # features/step_definitions/cookbook_steps.rb:1448
    When I check the webserver role only                                                                 # features/step_definitions/cookbook_steps.rb:1555
    Then the role name does not match file name warning 049 should be shown against the webserver role   # features/step_definitions/cookbook_steps.rb:1692
    And the role name does not match file name warning 049 should not be shown against the database role # features/step_definitions/cookbook_steps.rb:1692

  Scenario: Linting an individual environment                                                                       # features/individual_file.feature:22
    Given an environments directory                                                                                 # features/step_definitions/cookbook_steps.rb:1101
    And it contains an environment file production_eu.rb that defines the environment name "production (eu-west-1)" # features/step_definitions/cookbook_steps.rb:1444
    And it contains an environment file production_us.rb that defines the environment name "production (us-east-1)" # features/step_definitions/cookbook_steps.rb:1444
    When I check the eu environment file only                                                                       # features/step_definitions/cookbook_steps.rb:1534
    Then the invalid environment name warning 050 should be shown against the eu environment                        # features/step_definitions/cookbook_steps.rb:1665
    And the invalid environment name warning 050 should not be shown against the us environment                     # features/step_definitions/cookbook_steps.rb:1665

Feature: Limit rules to specific versions
  In order to not be shown warnings that do not apply to my version of Chef
  As a developer
  I want to be able to specify the version of Chef I am using

  Scenario: Rule with no version constraint - no version specified # features/limit_rules_to_specific_versions.feature:7
    Given a rule that does not declare a version constraint        # features/step_definitions/cookbook_steps.rb:1274
    And a cookbook that matches that rule                          # features/step_definitions/cookbook_steps.rb:906
    When I check the cookbook without specifying a Chef version    # features/step_definitions/cookbook_steps.rb:1526
    Then the warning should be displayed                           # features/step_definitions/cookbook_steps.rb:1723

  Scenario Outline: Rule with no version constraint - specifying version # features/limit_rules_to_specific_versions.feature:13
    Given a rule that does not declare a version constraint              # features/limit_rules_to_specific_versions.feature:14
    And a cookbook that matches that rule                                # features/limit_rules_to_specific_versions.feature:15
    When I check the cookbook specifying <version> as the Chef version   # features/limit_rules_to_specific_versions.feature:16
    Then the warning should be displayed                                 # features/limit_rules_to_specific_versions.feature:17

    Examples: 
      | version        |
      | 0.10.10.beta.1 |
      | 0.10.8         |
      | 0.10.6         |
      | 0.10.6.rc.5    |
      | 0.10.6.beta.3  |
      | 0.10.4         |
      | 0.10.2         |
      | 0.10.0         |
      | 0.9.18         |

  Scenario: Rule with version constraint - no version specified # features/limit_rules_to_specific_versions.feature:31
    Given a rule that declares a version constraint             # features/step_definitions/cookbook_steps.rb:1274
    And the current stable version of Chef falls within it      # features/step_definitions/cookbook_steps.rb:1337
    And a cookbook that matches that rule                       # features/step_definitions/cookbook_steps.rb:906
    When I check the cookbook without specifying a Chef version # features/step_definitions/cookbook_steps.rb:1526
    Then the warning should be displayed                        # features/step_definitions/cookbook_steps.rb:1723

  Scenario: Rule with version constraint - no version specified    # features/limit_rules_to_specific_versions.feature:38
    Given a rule that declares a version constraint                # features/step_definitions/cookbook_steps.rb:1274
    And the current stable version of Chef does not fall within it # features/step_definitions/cookbook_steps.rb:1337
    And a cookbook that matches that rule                          # features/step_definitions/cookbook_steps.rb:906
    When I check the cookbook without specifying a Chef version    # features/step_definitions/cookbook_steps.rb:1526
    Then the warning should not be displayed                       # features/step_definitions/cookbook_steps.rb:1723

  Scenario Outline: Rule with version constraint - specifying version                 # features/limit_rules_to_specific_versions.feature:45
    Given a rule that declares a version constraint of <from_version> to <to_version> # features/limit_rules_to_specific_versions.feature:46
    And a cookbook that matches that rule                                             # features/limit_rules_to_specific_versions.feature:47
    When I check the cookbook specifying <version> as the Chef version                # features/limit_rules_to_specific_versions.feature:48
    Then the warning <warning>                                                        # features/limit_rules_to_specific_versions.feature:49

    Examples: 
      | version        | from_version | to_version | warning                 |
      | 0.10.10.beta.1 | 0.10.10      |            | should not be displayed |
      | 0.10.10        | 0.10.10      |            | should be displayed     |
      | 0.10.8         | 0.10.10      |            | should not be displayed |
      | 0.10.6.rc.5    | 0.10.8       |            | should not be displayed |
      | 0.10.6.rc.5    | 0.10.6       |            | should not be displayed |
      | 0.10.4         | 0.9.14       |            | should be displayed     |
      | 0.10.4         | 0.10.10      |            | should not be displayed |
      | 0.10.8         | 0.9.18       | 0.10.6     | should not be displayed |
      | 0.10.6         | 0.9.18       | 0.10.6     | should be displayed     |
      | 0.9.18         | 0.9.18       | 0.10.6     | should be displayed     |
      | 0.9.14         | 0.9.18       | 0.10.6     | should not be displayed |
      | 0.9.14         |              | 0.10.6     | should be displayed     |
      | 0.9.14         |              | 0.9.12     | should not be displayed |

Feature: Multiple paths
  In order to avoid needing to run foodcritic multiple times
  As a developer
  I want to lint multiple paths at once

  Scenario Outline: Linting multiple individual cookbooks                                # features/multiple_paths.feature:7
    Given a cookbook with a single recipe that reads node attributes via symbols,strings # features/multiple_paths.feature:8
    And another cookbook with a single recipe that reads node attributes via strings     # features/multiple_paths.feature:9
    When I check both cookbooks with the command-line <command_line>                     # features/multiple_paths.feature:10
    Then the attribute consistency warning 019 should be shown                           # features/multiple_paths.feature:11

    Examples: 
      | command_line                                            |
      | example another_example                                 |
      | -B example -B another_example                           |
      | --cookbook-path example --cookbook-path another_example |
      | -B example another_example                              |
      | --cookbook-path example another_example                 |
      | -B example --cookbook-path another_example              |

  Scenario: Linting multiple role directories                                                                     # features/multiple_paths.feature:21
    Given two roles directories                                                                                   # features/step_definitions/cookbook_steps.rb:1477
    And each role directory has a role with a name that does not match the containing file name                   # features/step_definitions/cookbook_steps.rb:1439
    When I check both roles directories                                                                           # features/step_definitions/cookbook_steps.rb:1513
    Then the role name does not match file name warning 049 should be shown against the files in both directories # features/step_definitions/cookbook_steps.rb:1687

  Scenario: Linting a cookbook, role and environment together                                                                  # features/multiple_paths.feature:27
    Given a cookbook with a single recipe that reads node attributes via symbols,strings                                       # features/step_definitions/cookbook_steps.rb:1003
    And another cookbook with a single recipe that reads node attributes via strings                                           # features/step_definitions/cookbook_steps.rb:1003
    And a directory that contains a role file webserver.rb in ruby that defines role name apache                               # features/step_definitions/cookbook_steps.rb:1070
    And a directory that contains an environment file production.rb in ruby that defines environment name production (us-east) # features/step_definitions/cookbook_steps.rb:1074
    When I check the cookbooks, role and environment together                                                                  # features/step_definitions/cookbook_steps.rb:1517
    Then the attribute consistency warning 019 should be shown                                                                 # features/step_definitions/cookbook_steps.rb:1751
    And the role name does not match file name warning 049 should be shown                                                     # features/step_definitions/cookbook_steps.rb:1682
    And the invalid environment name warning 050 should be shown                                                               # features/step_definitions/cookbook_steps.rb:1660

Feature: Sort warnings
  In order to make it easier to see which lines of my recipe have been flagged with warnings
  As a developer
  I want warnings to appear in line order

  Scenario: Recipe has warnings on lines that don't sort non-numerically                                # features/sort_warnings.feature:7
    Given a cookbook with a single recipe which accesses node attributes with symbols on lines 2 and 10 # features/step_definitions/cookbook_steps.rb:1034
    When I check the cookbook                                                                           # features/step_definitions/cookbook_steps.rb:1490
    Then the node access warning 001 should warn on lines 2 and 10 in that order                        # features/step_definitions/cookbook_steps.rb:1814

Feature: Specify search grammar
In order to allow the use of alternate search grammars when validating search syntax
As a developer
I want to be able to specify the grammar to use as a command line option

  Scenario: No grammar passed                                                     # features/specify_search_grammar.feature:7
    Given a cookbook recipe that attempts to perform a search with invalid syntax # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook                                                     # features/step_definitions/cookbook_steps.rb:1490
    Then the invalid search syntax warning 010 should be displayed                # features/step_definitions/cookbook_steps.rb:1728

  Scenario: Missing grammar passed                                                # features/specify_search_grammar.feature:12
    Given a cookbook recipe that attempts to perform a search with invalid syntax # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook specifying a search grammar that does not exist     # features/step_definitions/cookbook_steps.rb:1888
    Then the check should abort with an error                                     # features/step_definitions/cookbook_steps.rb:1898

  Scenario: Invalid grammar passed                                                      # features/specify_search_grammar.feature:17
    Given a cookbook recipe that attempts to perform a search with invalid syntax       # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook specifying a search grammar that is not in treetop format # features/step_definitions/cookbook_steps.rb:1888
    Then the check should abort with an error                                           # features/step_definitions/cookbook_steps.rb:1898

  Scenario: Valid grammar passed                                                          # features/specify_search_grammar.feature:22
    Given a cookbook recipe that attempts to perform a search with invalid syntax         # features/step_definitions/cookbook_steps.rb:233
    When I check the cookbook specifying a search grammar that is a valid treetop grammar # features/step_definitions/cookbook_steps.rb:1888
    Then the invalid search syntax warning 010 should be displayed                        # features/step_definitions/cookbook_steps.rb:1728

583 scenarios (583 passed)
1893 steps (1893 passed)
1m8.374s
Coverage report generated for Cucumber Features, RSpec to /tmp/chef-external-test20170607-5022-jl3cl7/coverage. 818 / 893 LOC (91.6%) covered.

travis_time:end:0016f884:start=1496815173796116130,finish=1496815878127934137,duration=704331818007
The command "bundle exec tasks/bin/run_external_test $TEST_GEM master rake test" exited with 0.
travis_fold:start:cache.2store build cache
$ bundle clean
travis_time:start:04fc82b2
travis_time:end:04fc82b2:start=1496815879052959961,finish=1496815879061142809,duration=8182848travis_time:start:154c96e0nothing changed, not updating cache

travis_time:end:154c96e0:start=1496815879074953399,finish=1496815882850035552,duration=3775082153travis_fold:end:cache.2
Done. Your build exited with 0.
